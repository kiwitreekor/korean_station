include(sprites/kws.m4)
include(sprites/kws_func.m4)

setfeature(_STATION)
setpath(sprites/gfx)

textmode_on()
grfinit("KW" 00 02,
	grfname(ALL, "Kiwitree Korean Station Set v0.5-alpha")
	grfname(KR, UTF8 "키위트리 한국역 세트 v0.5-alpha")
	grfdescription(ALL, UTF8 "copyright 2017 - 2019 " T_WHITE "kiwitree" 
		CRLF T_LGRAY "Bug Report: " T_LBLUE "kiwitreekor@gmail.com" 
		CRLF T_BLACK "License: " T_WHITE "CC-BY-NC-SA 3.0" 
		CRLF CRLF T_RED "Warning! " T_WHITE "This is unstable version." 
		CRLF CRLF T_ORANGE "This version is not compatible with v0.4 and below. Please be careful when you update the NewGRF.")
	grfdescription(KR, UTF8 "copyright 2017 " T_WHITE "kiwitree" 
		CRLF T_LGRAY "버그 제보: " T_LBLUE "kiwitreekor@gmail.com" 
		CRLF T_BLACK "라이선스: " T_WHITE "CC-BY-NC-SA 3.0" 
		CRLF CRLF T_RED "주의! " T_WHITE "불안정 버전입니다." 
		CRLF CRLF T_ORANGE "v0.4 이하와 호환되지 않습니다. 업데이트 시 주의하십시오.")
	grfurl(ALL, {"https://github.com/kiwitreekor/kiwitree_station/"})
	grfversion(630)
	grfminversion(630)
	
	grfparameter(
		grfsetting(
			settype(BOOL,0,PARAM_PBS,1)
			setname(
				ALL, "Show path dark if path is reserved",
				KR, UTF8 "열차가 지날 경로를 어둡게 보여주기"
			)
			setdescription(
				ALL, "This setting only affects to the junction stations." CRLF "It would be look little weirdly.",
				KR, UTF8 "이 설정은 분기기가 설치된 승강장에만 적용됩니다." CRLF "다소 부자연스럽게 작동할 수 있습니다."
			)
			setdefault(1)
		)
		grfsetting(
			settype(BOOL,0,PARAM_PSDSFX,1)
			setname(
				ALL, "Play sound effects when screendoor closes or opens", 
				KR, UTF8 "스크린도어가 열리고 닫힐 때 효과음 재생"
			)
			setdescription(
				ALL, "If you set this setting on, it will make sound when screendoor closes or opens.", 
				KR, UTF8 "이 매개 변수를 '예'로 설정하면 스크린도어가 열리고 닫힐 때 효과음이 나게 됩니다."
			)
			setdefault(1)
		)
		grfsetting(
			settype(BOOL,0,PARAM_PASSENGER,1)
			setname(
				ALL, "Show passenger graphics by waiting amount", 
				KR, UTF8 "승객 그래픽 보이기"
			)
			setdescription(
				ALL, "If you set this setting on, it will show passenger graphics by waiting amount.", 
				KR, UTF8 "역에 대기하고 있는 승객을 그래픽으로 보여줍니다."
			)
			setdefault(1)
		)
		grfsetting(
			settype(BOOL,0,PARAM_SHADOW,1)
			setname(
				ALL, "Make shadow under roof", 
				KR, UTF8 "지붕 밑 승강장을 어둡게 보이기"
			)
			setdescription(
				ALL, "If you set this setting on, platform under roof will shown dark.", 
				KR, UTF8 "지붕 밑의 승강장을 어둡게 표시합니다."
			)
			setdefault(1)
		)
	)
)
textmode_off()
deflabel(skip_no_shadow)
deflabel(skip_shadow)

spriteblock(
	set(
//normal
		sprite(spr_platform, 
		       platforms.png    8bpp  10   10 44 24 -31  -3 normal) //high platform A
		sprite(platforms.png    8bpp  60   10 44 24 -11  -3 normal)
		sprite(platforms.png    8bpp 110   10 44 24 -31  -3 normal) //high platform B
		sprite(platforms.png    8bpp 160   10 44 24 -11  -3 normal)
		sprite(spr_platform_l,
			   platforms.png    8bpp  10   50 44 22 -31  -1 normal) //low platform A
		sprite(platforms.png    8bpp  60   50 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110   50 44 22 -31  -1 normal) //low platform B
		sprite(platforms.png    8bpp 160   50 44 22 -11  -1 normal)
		sprite(spr_platform_la,
			   platforms.png    8bpp  10   90 44 22 -31  -1 normal) //low asphalt platform A
		sprite(platforms.png    8bpp  60   90 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110   90 44 22 -31  -1 normal) //low asphalt platform B
		sprite(platforms.png    8bpp 160   90 44 22 -11  -1 normal)
//shadowed
		sprite(spr_platform_s,
			   platforms.png    8bpp  10  400 44 24 -31  -3 normal) //high platform A
		sprite(platforms.png    8bpp  60  400 44 24 -11  -3 normal)
		sprite(platforms.png    8bpp 110  400 44 24 -31  -3 normal) //high platform B
		sprite(platforms.png    8bpp 160  400 44 24 -11  -3 normal)
		sprite(spr_platform_sl,
			   platforms.png    8bpp  10  440 44 22 -31  -1 normal) //low platform A
		sprite(platforms.png    8bpp  60  440 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  440 44 22 -31  -1 normal) //low platform B
		sprite(platforms.png    8bpp 160  440 44 22 -11  -1 normal)
		sprite(spr_platform_sla,
			   platforms.png    8bpp  10  480 44 22 -31  -1 normal) //low asphalt platform A
		sprite(platforms.png    8bpp  60  480 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  480 44 22 -31  -1 normal) //low asphalt platform B
		sprite(platforms.png    8bpp 160  480 44 22 -11  -1 normal)
//snow
		sprite(spr_platform_snow, 
		       platforms.png    8bpp  10  780 44 24 -31  -3 normal) //high platform A
		sprite(platforms.png    8bpp  60  780 44 24 -11  -3 normal)
		sprite(platforms.png    8bpp 110  780 44 24 -31  -3 normal) //high platform B
		sprite(platforms.png    8bpp 160  780 44 24 -11  -3 normal)
		sprite(spr_platform_l_snow,
			   platforms.png    8bpp  10  820 44 22 -31  -1 normal) //low platform A
		sprite(platforms.png    8bpp  60  820 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  820 44 22 -31  -1 normal) //low platform B
		sprite(platforms.png    8bpp 160  820 44 22 -11  -1 normal)
		sprite(spr_platform_la_snow,
			   platforms.png    8bpp  10  860 44 22 -31  -1 normal) //low asphalt platform A
		sprite(platforms.png    8bpp  60  860 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  860 44 22 -31  -1 normal) //low asphalt platform B
		sprite(platforms.png    8bpp 160  860 44 22 -11  -1 normal)
//passengers
		sprite(spr_passengers, 
			   platforms.png    8bpp 500  100 44 19 -31  -1 normal) //passenger 1, platform A
		sprite(platforms.png    8bpp 550  100 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 600  100 44 19 -31  -1 normal) //passenger 1, platform B
		sprite(platforms.png    8bpp 650  100 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 500   70 44 19 -31  -1 normal) //passenger 2, platform A
		sprite(platforms.png    8bpp 550   70 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 600   70 44 19 -31  -1 normal) //passenger 2, platform B
		sprite(platforms.png    8bpp 650   70 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 500   40 44 19 -31  -1 normal) //passenger 3, platform A
		sprite(platforms.png    8bpp 550   40 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 600   40 44 19 -31  -1 normal) //passenger 3, platform B
		sprite(platforms.png    8bpp 650   40 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 500   10 44 19 -31  -1 normal) //passenger 4, platform A
		sprite(platforms.png    8bpp 550   10 44 19 -11  -1 normal)
		sprite(platforms.png    8bpp 600   10 44 19 -31  -1 normal) //passenger 4, platform B
		sprite(platforms.png    8bpp 650   10 44 19 -11  -1 normal)
//roofs
		sprite(spr_roofs,
			   roofs.png        8bpp  10   10 44 20 -31  -2 normal) //roof A, platform A
		sprite(roofs.png        8bpp  60   10 44 20 -11  -2 normal)
		sprite(roofs.png        8bpp 110   10 44 26 -31  -5 normal) //roof A, platform B
		sprite(roofs.png        8bpp 160   10 44 26 -11  -5 normal)
		sprite(roofs.png        8bpp  10  200 44 24 -31  -6 normal) //roof B, platform A
		sprite(roofs.png        8bpp  60  200 44 24 -11  -6 normal)
		sprite(roofs.png        8bpp 110  200 44 24 -31  -6 normal) //roof B, platform B
		sprite(roofs.png        8bpp 160  200 44 24 -11  -6 normal)
//roofs with snow
		sprite(spr_roofs_snow,
			   roofs.png        8bpp  10  100 44 20 -31  -2 normal) //roof A, platform A
		sprite(roofs.png        8bpp  60  100 44 20 -11  -2 normal)
		sprite(roofs.png        8bpp 110  100 44 26 -31  -5 normal) //roof A, platform B
		sprite(roofs.png        8bpp 160  100 44 26 -11  -5 normal)
		sprite(roofs.png        8bpp  10  290 44 24 -31  -6 normal) //roof B, platform A
		sprite(roofs.png        8bpp  60  290 44 24 -11  -6 normal)
		sprite(roofs.png        8bpp 110  290 44 24 -31  -6 normal) //roof B, platform B
		sprite(roofs.png        8bpp 160  290 44 24 -11  -6 normal)
//poles
		sprite(spr_poles,
			   roofs.png        8bpp  10   60 33 25 -31  -9 normal) //poles for roof A, platform A
		sprite(roofs.png        8bpp  60   60 33 25   0  -9 normal)
		sprite(roofs.png        8bpp  10   60 33 25 -32 -10 normal) //poles for roof A, platform B
		sprite(roofs.png        8bpp  60   60 33 25   1 -10 normal)
		sprite(roofs.png        8bpp  10  250 33 28 -32 -12 normal) //poles for roof B, platform A
		sprite(roofs.png        8bpp  60  250 33 28   1 -12 normal)
		sprite(roofs.png        8bpp  10  250 33 28 -32 -12 normal) //poles for roof B, platform B
		sprite(roofs.png        8bpp  60  250 33 28   1 -12 normal)
//crossings
		sprite(spr_platform_c,
			   platforms.png    8bpp  10  140 44 22 -31  -1 normal) //low crossing A (mid)
		sprite(platforms.png    8bpp  60  140 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  140 44 22 -31  -1 normal) //low crossing B (mid)
		sprite(platforms.png    8bpp 160  140 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  180 44 22 -31  -1 normal) //low crossing A (back)
		sprite(platforms.png    8bpp  60  180 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  180 44 22 -31  -1 normal) //low crossing B (back)
		sprite(platforms.png    8bpp 160  180 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  220 44 22 -31  -1 normal) //low crossing A (front)
		sprite(platforms.png    8bpp  60  220 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  220 44 22 -31  -1 normal) //low crossing B (front)
		sprite(platforms.png    8bpp 160  220 44 22 -11  -1 normal)
		sprite(spr_platform_ca,
			   platforms.png    8bpp  10  260 44 22 -31  -1 normal) //low asphalt crossing A (mid)
		sprite(platforms.png    8bpp  60  260 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  260 44 22 -31  -1 normal) //low asphalt crossing B (mid)
		sprite(platforms.png    8bpp 160  260 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  300 44 22 -31  -1 normal) //low asphalt crossing A (back)
		sprite(platforms.png    8bpp  60  300 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  300 44 22 -31  -1 normal) //low asphalt crossing B (back)
		sprite(platforms.png    8bpp 160  300 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  340 44 22 -31  -1 normal) //low asphalt crossing A (front)
		sprite(platforms.png    8bpp  60  340 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  340 44 22 -31  -1 normal) //low asphalt crossing B (front)
		sprite(platforms.png    8bpp 160  340 44 22 -11  -1 normal)
//crossings, shadow
		sprite(spr_platform_cs,
			   platforms.png    8bpp  10  530 44 22 -31  -1 normal) //low crossing A (mid)
		sprite(platforms.png    8bpp  60  530 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  530 44 22 -31  -1 normal) //low crossing B (mid)
		sprite(platforms.png    8bpp 160  530 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  570 44 22 -31  -1 normal) //low crossing A (back)
		sprite(platforms.png    8bpp  60  570 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  570 44 22 -31  -1 normal) //low crossing B (back)
		sprite(platforms.png    8bpp 160  570 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  610 44 22 -31  -1 normal) //low crossing A (front)
		sprite(platforms.png    8bpp  60  610 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  610 44 22 -31  -1 normal) //low crossing B (front)
		sprite(platforms.png    8bpp 160  610 44 22 -11  -1 normal)
		sprite(spr_platform_csa,
			   platforms.png    8bpp  10  650 44 22 -31  -1 normal) //low asphalt crossing A (mid)
		sprite(platforms.png    8bpp  60  650 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  650 44 22 -31  -1 normal) //low asphalt crossing B (mid)
		sprite(platforms.png    8bpp 160  650 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  690 44 22 -31  -1 normal) //low asphalt crossing A (back)
		sprite(platforms.png    8bpp  60  690 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  690 44 22 -31  -1 normal) //low asphalt crossing B (back)
		sprite(platforms.png    8bpp 160  690 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  730 44 22 -31  -1 normal) //low asphalt crossing A (front)
		sprite(platforms.png    8bpp  60  730 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  730 44 22 -31  -1 normal) //low asphalt crossing B (front)
		sprite(platforms.png    8bpp 160  730 44 22 -11  -1 normal)
		sprite(spr_crossing,
			   platforms.png    8bpp 230  140 38 18  -5   0 normal) //crossing
		sprite(platforms.png    8bpp 280  140 38 18 -31   0 normal)
//crossings, snow
		sprite(spr_platform_c_snow,
			   platforms.png    8bpp  10  910 44 22 -31  -1 normal) //low crossing A (mid)
		sprite(platforms.png    8bpp  60  910 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  910 44 22 -31  -1 normal) //low crossing B (mid)
		sprite(platforms.png    8bpp 160  910 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  950 44 22 -31  -1 normal) //low crossing A (back)
		sprite(platforms.png    8bpp  60  950 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  950 44 22 -31  -1 normal) //low crossing B (back)
		sprite(platforms.png    8bpp 160  950 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10  990 44 22 -31  -1 normal) //low crossing A (front)
		sprite(platforms.png    8bpp  60  990 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110  990 44 22 -31  -1 normal) //low crossing B (front)
		sprite(platforms.png    8bpp 160  990 44 22 -11  -1 normal)
		sprite(spr_platform_ca_snow,
			   platforms.png    8bpp  10 1030 44 22 -31  -1 normal) //low asphalt crossing A (mid)
		sprite(platforms.png    8bpp  60 1030 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110 1030 44 22 -31  -1 normal) //low asphalt crossing B (mid)
		sprite(platforms.png    8bpp 160 1030 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10 1070 44 22 -31  -1 normal) //low asphalt crossing A (back)
		sprite(platforms.png    8bpp  60 1070 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110 1070 44 22 -31  -1 normal) //low asphalt crossing B (back)
		sprite(platforms.png    8bpp 160 1070 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp  10 1110 44 22 -31  -1 normal) //low asphalt crossing A (front)
		sprite(platforms.png    8bpp  60 1110 44 22 -11  -1 normal)
		sprite(platforms.png    8bpp 110 1110 44 22 -31  -1 normal) //low asphalt crossing B (front)
		sprite(platforms.png    8bpp 160 1110 44 22 -11  -1 normal)
//buildings
		sprite(spr_bdoverpass_low,
			   buildings.png    8bpp  10   10 64 47 -31 -16 normal) //low overpass
		sprite(buildings.png    8bpp  90   10 64 47 -31 -16 normal) 
		sprite(spr_bdoverpass_high,
			   buildings.png    8bpp  10   70 64 79 -31 -48 normal) //high overpass
		sprite(buildings.png    8bpp  90   70 64 79 -31 -48 normal) 
		sprite(spr_building_low,
			   buildings.png    8bpp 170   10 64 59 -31 -28 normal) //low building block, south
		sprite(buildings.png    8bpp 250   10 64 59 -31 -28 normal) 
		sprite(buildings.png    8bpp 330   10 64 59 -31 -28 normal) //low building block, north
		sprite(buildings.png    8bpp 410   10 64 59 -31 -28 normal)
		sprite(spr_building_low_corner,
			   buildings.png    8bpp 170  180 64 59 -31 -28 normal) // \/
		sprite(buildings.png    8bpp 250  180 64 59 -31 -28 normal) // < 
		sprite(buildings.png    8bpp 330  180 64 59 -31 -28 normal) // /\
		sprite(buildings.png    8bpp 410  180 64 59 -31 -28 normal) //  >
		sprite(buildings.png    8bpp 170  360 64 59 -31 -28 normal) // /\
		sprite(buildings.png    8bpp 250  360 64 59 -31 -28 normal) //  >
		sprite(buildings.png    8bpp 330  360 64 59 -31 -28 normal) // \/
		sprite(buildings.png    8bpp 410  360 64 59 -31 -28 normal) // <
		sprite(spr_building_low_full,
			   buildings.png    8bpp 490   10 64 59 -31 -28 normal) //low building block
		sprite(buildings.png    8bpp 570   10 64 59 -31 -28 normal)
		sprite(spr_building_high,
			   buildings.png    8bpp 170   80 64 91 -31 -60 normal) //high building block, south
		sprite(buildings.png    8bpp 250   80 64 91 -31 -60 normal) 
		sprite(buildings.png    8bpp 330   80 64 91 -31 -60 normal) //high building block, north
		sprite(buildings.png    8bpp 410   80 64 91 -31 -60 normal)
		sprite(spr_building_high_corner,
			   buildings.png    8bpp 170  250 64 91 -31 -60 normal) // \/
		sprite(buildings.png    8bpp 250  250 64 91 -31 -60 normal) // <
		sprite(buildings.png    8bpp 330  250 64 91 -31 -60 normal) // /\
		sprite(buildings.png    8bpp 410  250 64 91 -31 -60 normal) //  >
		sprite(buildings.png    8bpp 170  430 64 91 -31 -60 normal) // /\
		sprite(buildings.png    8bpp 250  430 64 91 -31 -60 normal) //  >
		sprite(buildings.png    8bpp 330  430 64 91 -31 -60 normal) // \/
		sprite(buildings.png    8bpp 410  430 64 91 -31 -60 normal) // <
		sprite(spr_building_high_full,
			   buildings.png    8bpp 490   80 64 91 -31 -60 normal) //high building block
		sprite(buildings.png    8bpp 570   80 64 91 -31 -60 normal)
//buildings, snow
		sprite(spr_bdoverpass_low_snow,
			   buildings.png    8bpp  10  610 64 47 -31 -16 normal) //low overpass
		sprite(buildings.png    8bpp  90  610 64 47 -31 -16 normal) 
		sprite(spr_bdoverpass_high_snow,
			   buildings.png    8bpp  10  670 64 79 -31 -48 normal) //high overpass
		sprite(buildings.png    8bpp  90  670 64 79 -31 -48 normal) 
		sprite(spr_building_low_snow,
			   buildings.png    8bpp 170  610 64 59 -31 -28 normal) //low building block, south
		sprite(buildings.png    8bpp 250  610 64 59 -31 -28 normal) 
		sprite(buildings.png    8bpp 330  610 64 59 -31 -28 normal) //low building block, north
		sprite(buildings.png    8bpp 410  610 64 59 -31 -28 normal)
		sprite(spr_building_low_corner_snow,
			   buildings.png    8bpp 170  780 64 59 -31 -28 normal) // \/
		sprite(buildings.png    8bpp 250  780 64 59 -31 -28 normal) // < 
		sprite(buildings.png    8bpp 330  780 64 59 -31 -28 normal) // /\
		sprite(buildings.png    8bpp 410  780 64 59 -31 -28 normal) //  >
		sprite(buildings.png    8bpp 170  960 64 59 -31 -28 normal) // /\
		sprite(buildings.png    8bpp 250  960 64 59 -31 -28 normal) //  >
		sprite(buildings.png    8bpp 330  960 64 59 -31 -28 normal) // \/
		sprite(buildings.png    8bpp 410  960 64 59 -31 -28 normal) // <
		sprite(spr_building_low_full_snow,
			   buildings.png    8bpp 490  610 64 59 -31 -28 normal) //low building block
		sprite(buildings.png    8bpp 570  610 64 59 -31 -28 normal)
		sprite(spr_building_high_snow,
			   buildings.png    8bpp 170  680 64 91 -31 -60 normal) //high building block, south
		sprite(buildings.png    8bpp 250  680 64 91 -31 -60 normal) 
		sprite(buildings.png    8bpp 330  680 64 91 -31 -60 normal) //high building block, north
		sprite(buildings.png    8bpp 410  680 64 91 -31 -60 normal)
		sprite(spr_building_high_corner_snow,
			   buildings.png    8bpp 170  850 64 91 -31 -60 normal) // \/
		sprite(buildings.png    8bpp 250  850 64 91 -31 -60 normal) // <
		sprite(buildings.png    8bpp 330  850 64 91 -31 -60 normal) // /\
		sprite(buildings.png    8bpp 410  850 64 91 -31 -60 normal) //  >
		sprite(buildings.png    8bpp 170 1030 64 91 -31 -60 normal) // /\
		sprite(buildings.png    8bpp 250 1030 64 91 -31 -60 normal) //  >
		sprite(buildings.png    8bpp 330 1030 64 91 -31 -60 normal) // \/
		sprite(buildings.png    8bpp 410 1030 64 91 -31 -60 normal) // <
		sprite(spr_building_high_full_snow,
			   buildings.png    8bpp 490  680 64 91 -31 -60 normal) //high building block
		sprite(buildings.png    8bpp 570  680 64 91 -31 -60 normal)
//pole
		sprite(spr_building_pole_hp,
			   buildings.png    8bpp  10  160 32 24 -31  -9 normal) //for high platforms
		sprite(buildings.png    8bpp  90  160 32 24   1  -9 normal)
		sprite(spr_building_pole_lp,
			   buildings.png    8bpp  10  200 32 26 -31 -11 normal) //for low platforms
		sprite(buildings.png    8bpp  90  200 32 26   1 -11 normal)
		sprite(spr_building_pole,
			   buildings.png    8bpp  50  160 32 27 -31 -12 normal)
		sprite(buildings.png    8bpp 130  160 32 27   1 -12 normal)
	)
)

def(0, sprset_default) spriteset(little(0), lots(0))

spriteblock(
//custom grounds
	set(
		sprite(spr_ground_building,
			   buildings.png    8bpp  10  250 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  10  800 64 31 -31   0 normal) //snow
		sprite(buildings.png    8bpp  90  800 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  10  840 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  90  840 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  10  880 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  90  880 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  10  920 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  90  920 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  10  960 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  90  960 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  10 1000 64 31 -31   0 normal)
		sprite(buildings.png    8bpp  90 1000 64 31 -31   0 normal)
	)
)

def(1, sprset_ground) spriteset(little(0), lots(0))

definestation(HP_A, "High Platform A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_A,
	passenger_graphic_A(
		regular(spr_platform,   xyz(0,0,0), dxdydz(16, 6,3)),
		regular(spr_platform+1, xyz(0,0,0), dxdydz( 6,16,3)),
		3, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_snow,   xyz(0,0,0), dxdydz(16, 6,3)),
		regular(spr_platform_snow+1, xyz(0,0,0), dxdydz( 6,16,3)),
		3, spr_ground_snow
	)
)

def(22, sw_terrain_snow) tinfo_terrain(
	cbr(1) if(SNOW)
	cbr(0) else
)

skipif(1, getowngrfparameter(0), BITCLR, PARAM_PASSENGER)
def(20, sw_passenger) cargowaiting(PASS,
	cbr(0) if(0 .. 16)
	cbr(2) if(17 .. 128)
	cbr(4) if(129 .. 512)
	cbr(6) if(513 .. 1024)
	cbr(8) else
)
skipif(1, getowngrfparameter(0), BITSET, PARAM_PASSENGER)
def(20, sw_passenger) cargowaiting(PASS,
	cbr(0) if(0 .. 0)
	cbr(0) else
)

def(23, sw_passenger_snow) calculate({subroutine(sw_terrain_snow,) * 10 + subroutine(sw_passenger,)},
	cbfail() else
)

def(21, sw_normal) callback(
	ref(sw_passenger_snow) if(CB_LAYOUT)
	ref(sprset_default) else
)

makestation(HP_A,
	default(ref(sw_normal))
)


definestation(HP_B, "High Platform B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_B,
	passenger_graphic_B(
		regular(spr_platform+2, xyz( 0,10,0), dxdydz(16, 6,3)),
		regular(spr_platform+3, xyz(10, 0,0), dxdydz( 6,16,3)),
		3, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_snow+2, xyz( 0,10,0), dxdydz(16, 6,3)),
		regular(spr_platform_snow+3, xyz(10, 0,0), dxdydz( 6,16,3)),
		3, spr_ground_snow
	)
)

makestation(HP_B,
	default(ref(sw_normal))
)


definestation(HP_C, "High Platform C",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_C,
	passenger_graphic_C(
		regular(spr_platform,   xyz( 0, 0,0), dxdydz(16, 6,3))
		regular(spr_platform+2, xyz( 0,10,0), dxdydz(16, 6,3)),
		regular(spr_platform+1, xyz( 0, 0,0), dxdydz( 6,16,3))
		regular(spr_platform+3, xyz(10, 0,0), dxdydz( 6,16,3)),
		3, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_snow,   xyz( 0, 0,0), dxdydz(16, 6,3))
		regular(spr_platform_snow+2, xyz( 0,10,0), dxdydz(16, 6,3)),
		regular(spr_platform_snow+1, xyz( 0, 0,0), dxdydz( 6,16,3))
		regular(spr_platform_snow+3, xyz(10, 0,0), dxdydz( 6,16,3)),
		3, spr_ground_snow
	)
)

makestation(HP_C,
	default(ref(sw_normal))
)


definestation(HP_A_RF_A, "High Platform A + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_A_RF_A,
	passenger_graphic_A(
		regular(spr_platform_s,   xyz(0,0, 0), dxdydz(16, 6, 3))
		roofA_A1(3),
		regular(spr_platform_s+1, xyz(0,0, 0), dxdydz( 6,16, 3))
		roofA_A2(3),
		3, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_s,   xyz(0,0, 0), dxdydz(16, 6, 3))
		roofA_A1_snow(3),
		regular(spr_platform_s+1, xyz(0,0, 0), dxdydz( 6,16, 3))
		roofA_A2_snow(3),
		3, spr_ground_snow
	)
)

makestation(HP_A_RF_A,
	default(ref(sw_normal))
)


definestation(HP_B_RF_A, "High Platform B + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_B_RF_A,
	passenger_graphic_B(
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofA_B1(3),
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofA_B2(3),
		3, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofA_B1_snow(3),
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofA_B2_snow(3),
		3, spr_ground_snow
	)
)

makestation(HP_B_RF_A,
	default(ref(sw_normal))
)


definestation(HP_C_RF_A, "High Platform C + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_C_RF_A,
	passenger_graphic_C(
		regular(spr_platform_s, xyz(0,0,0), dxdydz(16,6,3))
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofA_A1(3)
		roofA_B1(3),
		regular(spr_platform_s+1, xyz(0,0,0), dxdydz(6,16,3))
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofA_A2(3)
		roofA_B2(3),
		3, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_s, xyz(0,0,0), dxdydz(16,6,3))
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofA_A1_snow(3)
		roofA_B1_snow(3),
		regular(spr_platform_s+1, xyz(0,0,0), dxdydz(6,16,3))
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofA_A2_snow(3)
		roofA_B2_snow(3),
		3, spr_ground_snow
	)
)

makestation(HP_C_RF_A,
	default(ref(sw_normal))
)


definestation(HP_A_RF_B, "High Platform A + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_A_RF_B,
	passenger_graphic_A(
		regular(spr_platform_s, xyz(0,0,0), dxdydz(16,6,3))
		roofB_A1(3),
		regular(spr_platform_s+1, xyz(0,0,0), dxdydz(6,16,3))
		roofB_A2(3),
		3, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_s, xyz(0,0,0), dxdydz(16,6,3))
		roofB_A1_snow(3),
		regular(spr_platform_s+1, xyz(0,0,0), dxdydz(6,16,3))
		roofB_A2_snow(3),
		3, spr_ground_snow
	)
)

makestation(HP_A_RF_B,
	default(ref(sw_normal))
)


definestation(HP_B_RF_B, "High Platform B + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_B_RF_B,
	passenger_graphic_B(
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofB_B1(3),
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofB_B2(3),
		3, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofB_B1_snow(3),
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofB_B2_snow(3),
		3, spr_ground_snow
	)
)

makestation(HP_B_RF_B,
	default(ref(sw_normal))
)


definestation(HP_C_RF_B, "High Platform C + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(HP_C_RF_B,
	passenger_graphic_C(
		regular(spr_platform_s, xyz(0,0,0), dxdydz(16,6,3))
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofB_A1(3)
		roofB_B1(3),
		regular(spr_platform_s+1, xyz(0,0,0), dxdydz(6,16,3))
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofB_A2(3)
		roofB_B2(3),
		3, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_s, xyz(0,0,0), dxdydz(16,6,3))
		regular(spr_platform_s+2, xyz(0,10,0), dxdydz(16,6,3))
		roofB_A1_snow(3)
		roofB_B1_snow(3),
		regular(spr_platform_s+1, xyz(0,0,0), dxdydz(6,16,3))
		regular(spr_platform_s+3, xyz(10,0,0), dxdydz(6,16,3))
		roofB_A2_snow(3)
		roofB_B2_snow(3),
		3, spr_ground_snow
	)
)

makestation(HP_C_RF_B,
	default(ref(sw_normal))
)


definestation(LP_A, "Low Platform A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_A,
	passenger_graphic_A(
		regular(spr_platform_l, xyz(0,0,0), dxdydz(16,6,1)),
		regular(spr_platform_l+1, xyz(0,0,0), dxdydz(6,16,1)),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_l_snow, xyz(0,0,0), dxdydz(16,6,1)),
		regular(spr_platform_l_snow+1, xyz(0,0,0), dxdydz(6,16,1)),
		1, spr_ground_snow
	)
)

makestation(LP_A,
	default(ref(sw_normal))
)


definestation(LP_B, "Low Platform B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_B,
	passenger_graphic_B(
		regular(spr_platform_l+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_l+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_l_snow+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_l_snow+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground_snow
	)
)

makestation(LP_B,
	default(ref(sw_normal))
)


definestation(LP_C, "Low Platform C",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_C,
	passenger_graphic_C(
		regular(spr_platform_l, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_l+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_l+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_l+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_l_snow, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_l_snow+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_l_snow+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_l_snow+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground_snow
	)
)

makestation(LP_C,
	default(ref(sw_normal))
)


definestation(LP_A_RF_A, "Low Platform A + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_A_RF_A,
	passenger_graphic_A(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		roofA_A1(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		roofA_A2(1),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		roofA_A1_snow(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		roofA_A2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LP_A_RF_A,
	default(ref(sw_normal))
)


definestation(LP_B_RF_A, "Low Platform B + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_B_RF_A,
	passenger_graphic_B(
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_B1(1),
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_B2(1),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_B1_snow(1),
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LP_B_RF_A,
	default(ref(sw_normal))
)


definestation(LP_C_RF_A, "Low Platform C + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_C_RF_A,
	passenger_graphic_C(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_A1(1)
		roofA_B1(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_A2(1)
		roofA_B2(1),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_A1_snow(1)
		roofA_B1_snow(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_A2_snow(1)
		roofA_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LP_C_RF_A,
	default(ref(sw_normal))
)


definestation(LP_A_RF_B, "Low Platform A + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_A_RF_B,
	passenger_graphic_A(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		roofB_A1(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		roofB_A2(1),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		roofB_A1_snow(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		roofB_A2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LP_A_RF_B,
	default(ref(sw_normal))
)


definestation(LP_B_RF_B, "Low Platform B + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_B_RF_B,
	passenger_graphic_B(
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_B1(1),
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		roofB_B2(1),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_B1_snow(1),
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		roofB_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LP_B_RF_B,
	default(ref(sw_normal))
)


definestation(LP_C_RF_B, "Low Platform C + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LP_C_RF_B,
	passenger_graphic_C(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_A1(1)
		roofB_B1(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		regular(spr_poles+5, xyz(3,0,1), dxdydz(0,16,10))
		regular(spr_roofs+5, xyz(0,0,11), dxdydz(6,16,3))
		roofB_A2(1)
		roofB_B2(1),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sl, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sl+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_A1_snow(1)
		roofB_B1_snow(1),
		regular(spr_platform_sl+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sl+3, xyz(10,0,0), dxdydz(6,16,1))
		regular(spr_poles+5, xyz(3,0,1), dxdydz(0,16,10))
		regular(spr_roofs+5, xyz(0,0,11), dxdydz(6,16,3))
		roofB_A2_snow(1)
		roofB_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LP_C_RF_B,
	default(ref(sw_normal))
)


definestation(LAP_A, "Low Asphalt Platform A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_A,
	passenger_graphic_A(
		regular(spr_platform_la, xyz(0,0,0), dxdydz(16,6,1)),
		regular(spr_platform_la+1, xyz(0,0,0), dxdydz(6,16,1)),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_la_snow, xyz(0,0,0), dxdydz(16,6,1)),
		regular(spr_platform_la_snow+1, xyz(0,0,0), dxdydz(6,16,1)),
		1, spr_ground_snow
	)
)

makestation(LAP_A,
	default(ref(sw_normal))
)


definestation(LAP_B, "Low Asphalt Platform B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_B,
	passenger_graphic_B(
		regular(spr_platform_la+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_la+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_la_snow+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_la_snow+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground_snow
	)
)

makestation(LAP_B,
	default(ref(sw_normal))
)


definestation(LAP_C, "Low Asphalt Platform C",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_C,
	passenger_graphic_C(
		regular(spr_platform_la, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_la+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_la+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_la+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_la_snow, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_la_snow+2, xyz(0,10,0), dxdydz(16,6,1)),
		regular(spr_platform_la_snow+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_la_snow+3, xyz(10,0,0), dxdydz(6,16,1)),
		1, spr_ground_snow
	)
)

makestation(LAP_C,
	default(ref(sw_normal))
)


definestation(LAP_A_RF_A, "Low Asphalt Platform A + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_A_RF_A,
	passenger_graphic_A(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		roofA_A1(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		roofA_A2(1),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		roofA_A1_snow(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		roofA_A2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LAP_A_RF_A,
	default(ref(sw_normal))
)


definestation(LAP_B_RF_A, "Low Asphalt Platform B + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_B_RF_A,
	passenger_graphic_B(
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_B1(1),
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_B2(1),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_B1_snow(1),
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LAP_B_RF_A,
	default(ref(sw_normal))
)


definestation(LAP_C_RF_A, "Low Asphalt Platform C + Roof A",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_C_RF_A,
	passenger_graphic_C(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_A1(1)
		roofA_B1(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_A2(1)
		roofA_B2(1),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofA_A1_snow(1)
		roofA_B1_snow(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofA_A2_snow(1)
		roofA_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LAP_C_RF_A,
	default(ref(sw_normal))
)


definestation(LAP_A_RF_B, "Low Asphalt Platform A + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_A_RF_B,
	passenger_graphic_A(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		roofB_A1(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		roofB_A2(1),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		roofB_A1_snow(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		roofB_A2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LAP_A_RF_B,
	default(ref(sw_normal))
)


definestation(LAP_B_RF_B, "Low Asphalt Platform B + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_B_RF_B,
	passenger_graphic_B(
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_B1(1),
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofB_B2(1),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_B1_snow(1),
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofB_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LAP_B_RF_B,
	default(ref(sw_normal))
)


definestation(LAP_C_RF_B, "Low Asphalt Platform C + Roof B",
	class(CLASS_PLATFORMS)
	callbacks(CB_LAYOUT)
)

layout(LAP_C_RF_B,
	passenger_graphic_C(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_A1(1)
		roofB_B1(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofB_A2(1)
		roofB_B2(1),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sla, xyz(0,0,0), dxdydz(16,6,1))
		regular(spr_platform_sla+2, xyz(0,10,0), dxdydz(16,6,1))
		roofB_A1_snow(1)
		roofB_B1_snow(1),
		regular(spr_platform_sla+1, xyz(0,0,0), dxdydz(6,16,1))
		regular(spr_platform_sla+3, xyz(10,0,0), dxdydz(6,16,1))
		roofB_A2_snow(1)
		roofB_B2_snow(1),
		1, spr_ground_snow
	)
)

makestation(LAP_C_RF_B,
	default(ref(sw_normal))
)

definestation(LP_A_CR, {"Low Platform A + Crossing", "Low Platform B + Crossing", "Low Platform C + Crossing",
	"Low Platform A + Roof A + Crossing", "Low Platform B + Roof A + Crossing", "Low Platform C + Roof A + Crossing",
	"Low Platform A + Roof B + Crossing", "Low Platform B + Roof B + Crossing", "Low Platform C + Roof B + Crossing"},
	class(CLASS_CROSSINGS, CLASS_CROSSINGS, CLASS_CROSSINGS,
		CLASS_CROSSINGS, CLASS_CROSSINGS, CLASS_CROSSINGS,
		CLASS_CROSSINGS, CLASS_CROSSINGS, CLASS_CROSSINGS)
	callbacks({CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME},
		{CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME},
		{CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME})
	anim_triggers({BUILT, PERIODIC}, {BUILT, PERIODIC}, {BUILT, PERIODIC},
		{BUILT, PERIODIC}, {BUILT, PERIODIC}, {BUILT, PERIODIC},
		{BUILT, PERIODIC}, {BUILT, PERIODIC}, {BUILT, PERIODIC})
)

definestation(LAP_A_CR, {"Low Asphalt Platform A + Crossing", "Low Asphalt Platform B + Crossing", "Low Asphalt Platform C + Crossing",
	"Low Asphalt Platform A + Roof A + Crossing", "Low Asphalt Platform B + Roof A + Crossing", "Low Asphalt Platform C + Roof A + Crossing",
	"Low Asphalt Platform A + Roof B + Crossing", "Low Asphalt Platform B + Roof B + Crossing", "Low Asphalt Platform C + Roof B + Crossing"},
	class(CLASS_CROSSINGS, CLASS_CROSSINGS, CLASS_CROSSINGS,
		CLASS_CROSSINGS, CLASS_CROSSINGS, CLASS_CROSSINGS,
		CLASS_CROSSINGS, CLASS_CROSSINGS, CLASS_CROSSINGS)
	callbacks({CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME},
		{CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME},
		{CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME}, {CB_LAYOUT, CB_AFRAME})
	anim_triggers({BUILT, PERIODIC}, {BUILT, PERIODIC}, {BUILT, PERIODIC},
		{BUILT, PERIODIC}, {BUILT, PERIODIC}, {BUILT, PERIODIC},
		{BUILT, PERIODIC}, {BUILT, PERIODIC}, {BUILT, PERIODIC})
)

layout(LP_A_CR, crossing_A(spr_platform_c,,,spr_ground) crossing_A(spr_platform_c_snow,,,spr_ground_snow))
layout(LP_B_CR, crossing_B(spr_platform_c,,,spr_ground) crossing_B(spr_platform_c_snow,,,spr_ground_snow))
layout(LP_C_CR, crossing_C(spr_platform_c,,,spr_ground) crossing_C(spr_platform_c_snow,,,spr_ground_snow))

layout(LP_A_CR_RF_A, crossing_A(spr_platform_cs,roofA_A1(1),roofA_A2(1),spr_ground) crossing_A(spr_platform_cs,roofA_A1_snow(1),roofA_A2_snow(1),spr_ground_snow))
layout(LP_B_CR_RF_A, crossing_B(spr_platform_cs,roofA_B1(1),roofA_B2(1),spr_ground) crossing_B(spr_platform_cs,roofA_B1_snow(1),roofA_B2_snow(1),spr_ground_snow))
layout(LP_C_CR_RF_A, crossing_C(spr_platform_cs,roofA_A1(1) roofA_B1(1),roofA_A2(1) roofA_B2(1),spr_ground) crossing_C(spr_platform_cs,roofA_A1_snow(1) roofA_B1_snow(1),roofA_A2_snow(1) roofA_B2_snow(1),spr_ground_snow))

layout(LP_A_CR_RF_B, crossing_A(spr_platform_cs,roofB_A1(1),roofB_A2(1),spr_ground) crossing_A(spr_platform_cs,roofB_A1_snow(1),roofB_A2_snow(1),spr_ground_snow))
layout(LP_B_CR_RF_B, crossing_B(spr_platform_cs,roofB_B1(1),roofB_B2(1),spr_ground) crossing_B(spr_platform_cs,roofB_B1_snow(1),roofB_B2_snow(1),spr_ground_snow))
layout(LP_C_CR_RF_B, crossing_C(spr_platform_cs,roofB_A1(1) roofB_B1(1),roofB_A2(1) roofB_B2(1),spr_ground) crossing_C(spr_platform_cs,roofB_A1_snow(1) roofB_B1_snow(1),roofB_A2_snow(1) roofB_B2_snow(1),spr_ground_snow))

layout(LAP_A_CR, crossing_A(spr_platform_ca,,,spr_ground) crossing_A(spr_platform_ca_snow,,,spr_ground_snow))
layout(LAP_B_CR, crossing_B(spr_platform_ca,,,spr_ground) crossing_B(spr_platform_ca_snow,,,spr_ground_snow))
layout(LAP_C_CR, crossing_C(spr_platform_ca,,,spr_ground) crossing_C(spr_platform_ca_snow,,,spr_ground_snow))

layout(LAP_A_CR_RF_A, crossing_A(spr_platform_csa,roofA_A1(1),roofA_A2(1),spr_ground) crossing_A(spr_platform_csa,roofA_A1_snow(1),roofA_A2_snow(1),spr_ground_snow))
layout(LAP_B_CR_RF_A, crossing_B(spr_platform_csa,roofA_B1(1),roofA_B2(1),spr_ground) crossing_B(spr_platform_csa,roofA_B1_snow(1),roofA_B2_snow(1),spr_ground_snow))
layout(LAP_C_CR_RF_A, crossing_C(spr_platform_csa,roofA_A1(1) roofA_B1(1),roofA_A2(1) roofA_B2(1),spr_ground) crossing_C(spr_platform_csa,roofA_A1_snow(1) roofA_B1_snow(1),roofA_A2_snow(1) roofA_B2_snow(1),spr_ground_snow))

layout(LAP_A_CR_RF_B, crossing_A(spr_platform_csa,roofB_A1(1),roofB_A2(1),spr_ground) crossing_A(spr_platform_csa,roofB_A1_snow(1),roofB_A2_snow(1),spr_ground_snow))
layout(LAP_B_CR_RF_B, crossing_B(spr_platform_csa,roofB_B1(1),roofB_B2(1),spr_ground) crossing_B(spr_platform_csa,roofB_B1_snow(1),roofB_B2_snow(1),spr_ground_snow))
layout(LAP_C_CR_RF_B, crossing_C(spr_platform_csa,roofB_A1(1) roofB_B1(1),roofB_A2(1) roofB_B2(1),spr_ground) crossing_C(spr_platform_csa,roofB_A1_snow(1) roofB_B1_snow(1),roofB_A2_snow(1) roofB_B2_snow(1),spr_ground_snow))

def(25) plt_posrev(
	cbr(1) if(0)
	cbr(0) else
)

def(27, sw_pos) plt_pos(
	cbr(2) if(0)
	ref(25) else
)

def(26, sw_calc_crossing_layout) calculate({subroutine(sw_terrain_snow,) * 3 + subroutine(sw_pos) * 10 + subroutine(sw_passenger,)},
	cbfail() else
)

def(24, sw_crossing) callback(
	ref(sw_calc_crossing_layout) if(CB_LAYOUT)
	ref(sw_pos) if(CB_ACONTROL)
	ref(sw_pos) if(CB_AFRAME)
	ref(sprset_default) else
)

makestation(LP_A_CR, default(ref(sw_crossing)))
makestation(LP_B_CR, default(ref(sw_crossing)))
makestation(LP_C_CR, default(ref(sw_crossing)))

makestation(LP_A_CR_RF_A, default(ref(sw_crossing)))
makestation(LP_B_CR_RF_A, default(ref(sw_crossing)))
makestation(LP_C_CR_RF_A, default(ref(sw_crossing)))

makestation(LP_A_CR_RF_B, default(ref(sw_crossing)))
makestation(LP_B_CR_RF_B, default(ref(sw_crossing)))
makestation(LP_C_CR_RF_B, default(ref(sw_crossing)))

makestation(LAP_A_CR, default(ref(sw_crossing)))
makestation(LAP_B_CR, default(ref(sw_crossing)))
makestation(LAP_C_CR, default(ref(sw_crossing)))

makestation(LAP_A_CR_RF_A, default(ref(sw_crossing)))
makestation(LAP_B_CR_RF_A, default(ref(sw_crossing)))
makestation(LAP_C_CR_RF_A, default(ref(sw_crossing)))

makestation(LAP_A_CR_RF_B, default(ref(sw_crossing)))
makestation(LAP_B_CR_RF_B, default(ref(sw_crossing)))
makestation(LAP_C_CR_RF_B, default(ref(sw_crossing)))

definestation(CRS, "Crossing",
	class(CLASS_CROSSINGS)
	callbacks({CB_LAYOUT, CB_AFRAME})
	anim_triggers(BUILT, PERIODIC)
)

layout(CRS,
	tile(
		ground(spr_ground+1)
		regular(spr_crossing, xyz(7,0,0), dxdydz(3,16,0))
	)
	tile(
		ground(spr_ground)
		regular(spr_crossing+1, xyz(0,7,0), dxdydz(16,3,0))
	)
	tile(
		ground(spr_ground+1)
		regular(spr_crossing, xyz(13,0,0), dxdydz(3,16,0))
	)
	tile(
		ground(spr_ground)
		regular(spr_crossing+1, xyz(0,13,0), dxdydz(16,3,0))
	)
	tile(
		ground(spr_ground+1)
		regular(spr_crossing, xyz(0,0,0), dxdydz(3,16,0))
	)
	tile(
		ground(spr_ground)
		regular(spr_crossing+1, xyz(0,0,0), dxdydz(16,3,0))
	)
)

def(32) anim_frame(pos(0,-1),
	cbr(0) if(0)
	cbr(1) if(1)
	cbr(2) else
)

def(30) tinfo_statid(pos(0,-1),shiftmask(0,0x1FF),
	ref(32) if(0x100+CROSSING_START .. 0x100+CROSSING_END)
	cbr(0) else
)

def(31) anim_frame(pos(0,-1),
	cbr(0) if(0)
	cbr(2) if(1)
	cbr(4) else
)

def(29) tinfo_statid(pos(0,-1),shiftmask(0,0x1FF),
	ref(31) if(0x100+CROSSING_START .. 0x100+CROSSING_END)
	cbr(0) else
)

def(28) callback(
	ref(29) if(CB_LAYOUT)
	ref(30) if(CB_ACONTROL)
	ref(30) if(CB_AFRAME)
	ref(sprset_default) else
)

makestation(CRS,
	default(ref(28))
)

// building blocks
definestation(BUILDING_LOW, {"Low Building Block", "High Building Block"},
	class(CLASS_BUILDINGS, CLASS_BUILDINGS)
	callbacks({CB_LAYOUT}, {CB_LAYOUT})
	flags({GROUNDSPRITES}, {GROUNDSPRITES})
	nontrack(TTD_NONE, TTD_NONE)
	nowires(TTD_NONE, TTD_NONE)
)

layout(BUILDING_LOW, stn_building(spr_building_low, spr_building_low_snow, 26))
layout(BUILDING_HIGH, stn_building(spr_building_high, spr_building_high_snow, 50))

// tinfo_trackconnect rsh 8 = tinfo_trackexist
def(32, sw_building_layout) tinfo_trackconnect(shiftmask(8, 12),
	cbr(2) if(4)
	cbr(20) if(12)
	cbr(0) else
)

def(31, sw_building_snow) calculate({subroutine(sw_terrain_snow,) * 22 + subroutine(sw_building_layout,)},
	cbfail() else
)

def(30, sw_building_sprtype) spritetype(
	ref(sprset_ground) if(1)
	ref(sprset_default) else
)

def(28, sw_building_cb) callback(
	ref(sw_building_snow) if(CB_LAYOUT)
	ref(sw_building_sprtype) else
)

def(29, sw_building_menu_cb) callback(
	cbr(0) if(CB_LAYOUT)
	ref(sw_building_sprtype) else
)

// spriteset links
makestation(BUILDING_LOW,
	link(ref(sw_building_menu_cb), MENU)
	default(ref(sw_building_cb))
)

makestation(BUILDING_HIGH,
	link(ref(sw_building_menu_cb), MENU)
	default(ref(sw_building_cb))
)

// building overpasses
definestation(BUILDING_LOW_HP_A, {"High Platform A + Low Overpass", "High Platform B + Low Overpass", "High Platform C + Low Overpass",
	"High Platform A + High Overpass", "High Platform B + High Overpass", "High Platform C + High Overpass"},
	class(CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS)
	callbacks({CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT})
)

definestation(BUILDING_LOW_LP_A, {"Low Platform A + Low Overpass", "Low Platform B + Low Overpass", "Low Platform C + Low Overpass",
	"Low Platform A + High Overpass", "Low Platform B + High Overpass", "Low Platform C + High Overpass"},
	class(CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS)
	callbacks({CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT})
)

definestation(BUILDING_LOW_LAP_A, {"Low Asphalt Platform A + Low Overpass", "Low Asphalt Platform B + Low Overpass", "Low Asphalt Platform C + Low Overpass",
	"Low Asphalt Platform A + High Overpass", "Low Asphalt Platform B + High Overpass", "Low Asphalt Platform C + High Overpass"},
	class(CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS, CLASS_BUILDINGS)
	callbacks({CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT}, {CB_LAYOUT})
)


layout(BUILDING_LOW_HP_A,
	passenger_graphic_A(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground_snow
	)
)

layout(BUILDING_LOW_HP_B,
	passenger_graphic_B(
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground_snow
	)
)

layout(BUILDING_LOW_HP_C,
	passenger_graphic_C(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground_snow
	)
)

layout(BUILDING_HIGH_HP_A,
	passenger_graphic_A(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,14)),
		3, spr_ground_snow
	)
)

layout(BUILDING_HIGH_HP_B,
	passenger_graphic_B(
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		3, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		3, spr_ground_snow
	)
)

layout(BUILDING_HIGH_HP_C,
	passenger_graphic_C(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		3, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_s,            xyz( 0, 0, 0), dxdydz(16, 6, 3))
		regular(spr_platform_s+2,          xyz( 0,10, 0), dxdydz(16, 6, 3))
		regular(spr_building_pole_hp,      xyz( 0, 0, 3), dxdydz(16, 0, 9))
		regular(spr_building_pole_hp,      xyz( 0,16, 3), dxdydz(16, 0, 9))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_s+1,          xyz( 0, 0, 0), dxdydz( 6,16, 3))
		regular(spr_platform_s+3,          xyz(10, 0, 0), dxdydz( 6,16, 3))
		regular(spr_building_pole_hp+1,    xyz( 0, 0, 3), dxdydz( 0,16, 9))
		regular(spr_building_pole_hp+1,    xyz(16, 0, 3), dxdydz( 0,16, 9))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		3, spr_ground_snow
	)
)

layout(BUILDING_LOW_LP_A,
	passenger_graphic_A(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_LOW_LP_B,
	passenger_graphic_B(
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_LOW_LP_C,
	passenger_graphic_C(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_HIGH_LP_A,
	passenger_graphic_A(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground_snow
	)
)

layout(BUILDING_HIGH_LP_B,
	passenger_graphic_B(
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground_snow
	)
)

layout(BUILDING_HIGH_LP_C,
	passenger_graphic_C(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sl,           xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sl+2,         xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sl+1,         xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sl+3,         xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground_snow
	)
)

layout(BUILDING_LOW_LAP_A,
	passenger_graphic_A(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_LOW_LAP_B,
	passenger_graphic_B(
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_LOW_LAP_C,
	passenger_graphic_C(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low,        xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low+1,      xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_low_snow,   xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_low_snow+1, xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_HIGH_LAP_A,
	passenger_graphic_A(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground
	)
	passenger_graphic_A(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole,         xyz( 0,16, 0), dxdydz(16, 0,12))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,14)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole+1,       xyz(16, 0, 0), dxdydz( 0,16,12))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,14)),
		1, spr_ground_snow
	)
)

layout(BUILDING_HIGH_LAP_B,
	passenger_graphic_B(
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground
	)
	passenger_graphic_B(
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole,         xyz( 0, 0, 0), dxdydz(16, 0,12))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole+1,       xyz( 0, 0, 0), dxdydz( 0,16,12))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground_snow
	)
)

layout(BUILDING_HIGH_LAP_C,
	passenger_graphic_C(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high,       xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high+1,     xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground
	)
	passenger_graphic_C(
		regular(spr_platform_sla,          xyz( 0, 0, 0), dxdydz(16, 6, 1))
		regular(spr_platform_sla+2,        xyz( 0,10, 0), dxdydz(16, 6, 1))
		regular(spr_building_pole_lp,      xyz( 0, 0, 1), dxdydz(16, 0,11))
		regular(spr_building_pole_lp,      xyz( 0,16, 1), dxdydz(16, 0,11))
		regular(spr_bdoverpass_high_snow,  xyz( 0, 0,12), dxdydz(16,16,38)),
		regular(spr_platform_sla+1,        xyz( 0, 0, 0), dxdydz( 6,16, 1))
		regular(spr_platform_sla+3,        xyz(10, 0, 0), dxdydz( 6,16, 1))
		regular(spr_building_pole_lp+1,    xyz( 0, 0, 1), dxdydz( 0,16,11))
		regular(spr_building_pole_lp+1,    xyz(16, 0, 1), dxdydz( 0,16,11))
		regular(spr_bdoverpass_high_snow+1,xyz( 0, 0,12), dxdydz(16,16,38)),
		1, spr_ground_snow
	)
)

makestation(BUILDING_LOW_HP_A, default(ref(sw_normal)))
makestation(BUILDING_LOW_HP_B, default(ref(sw_normal)))
makestation(BUILDING_LOW_HP_C, default(ref(sw_normal)))
makestation(BUILDING_HIGH_HP_A, default(ref(sw_normal)))
makestation(BUILDING_HIGH_HP_B, default(ref(sw_normal)))
makestation(BUILDING_HIGH_HP_C, default(ref(sw_normal)))
makestation(BUILDING_LOW_LP_A, default(ref(sw_normal)))
makestation(BUILDING_LOW_LP_B, default(ref(sw_normal)))
makestation(BUILDING_LOW_LP_C, default(ref(sw_normal)))
makestation(BUILDING_HIGH_LP_A, default(ref(sw_normal)))
makestation(BUILDING_HIGH_LP_B, default(ref(sw_normal)))
makestation(BUILDING_HIGH_LP_C, default(ref(sw_normal)))
makestation(BUILDING_LOW_LAP_A, default(ref(sw_normal)))
makestation(BUILDING_LOW_LAP_B, default(ref(sw_normal)))
makestation(BUILDING_LOW_LAP_C, default(ref(sw_normal)))
makestation(BUILDING_HIGH_LAP_A, default(ref(sw_normal)))
makestation(BUILDING_HIGH_LAP_B, default(ref(sw_normal)))
makestation(BUILDING_HIGH_LAP_C, default(ref(sw_normal)))

// string definitions
classnames(PLATFORM_START,
	{KR, UTF8 "[KWS] 승강장"},
	{ALL, "[KWS] Platforms"}
)

stationnames(PLATFORM_START,
	{KR, UTF8 "고상홈 A", UTF8 "고상홈 B", UTF8 "고상홈 C"
	, UTF8 "고상홈 A + 지붕 A", UTF8 "고상홈 B + 지붕 A", UTF8 "고상홈 C + 지붕 A"
	, UTF8 "고상홈 A + 지붕 B", UTF8 "고상홈 B + 지붕 B", UTF8 "고상홈 C + 지붕 B"
	, UTF8 "저상홈 A", UTF8 "저상홈 B", UTF8 "저상홈 C"
	, UTF8 "저상홈 A + 지붕 A", UTF8 "저상홈 B + 지붕 A", UTF8 "저상홈 C + 지붕 A"
	, UTF8 "저상홈 A + 지붕 B", UTF8 "저상홈 B + 지붕 B", UTF8 "저상홈 C + 지붕 B"
	, UTF8 "아스팔트 저상홈 A", UTF8 "아스팔트 저상홈 B", UTF8 "아스팔트 저상홈 C"
	, UTF8 "아스팔트 저상홈 A + 지붕 A", UTF8 "아스팔트 저상홈 B + 지붕 A", UTF8 "아스팔트 저상홈 C + 지붕 A"
	, UTF8 "아스팔트 저상홈 A + 지붕 B", UTF8 "아스팔트 저상홈 B + 지붕 B", UTF8 "아스팔트 저상홈 C + 지붕 B"},
	{ALL, "High Platform A", "High Platform B", "High Platform C"
	, "High Platform A + Roof A", "High Platform B + Roof A", "High Platform C + Roof A"
	, "High Platform A + Roof B", "High Platform B + Roof B", "High Platform C + Roof B"
	, "Low Platform A", "Low Platform B", "Low Platform C"
	, "Low Platform A + Roof A", "Low Platform B + Roof A", "Low Platform C + Roof A"
	, "Low Platform A + Roof B", "Low Platform B + Roof B", "Low Platform C + Roof B"
	, "Low Asphalt Platform A", "Low Asphalt Platform B", "Low Asphalt Platform C"
	, "Low Asphalt Platform A + Roof A", "Low Asphalt Platform B + Roof A", "Low Asphalt Platform C + Roof A"
	, "Low Asphalt Platform A + Roof B", "Low Asphalt Platform B + Roof B", "Low Asphalt Platform C + Roof B"}
)

classnames(CROSSING_START,
	{KR, UTF8 "[KWS] 건널목"},
	{ALL, "[KWS] Crossings"}
)

stationnames(CROSSING_START,
	{KR, UTF8 "저상홈 A + 건널목", UTF8 "저상홈 B + 건널목", UTF8 "저상홈 C + 건널목"
	, UTF8 "저상홈 A + 지붕 A + 건널목", UTF8 "저상홈 B + 지붕 A + 건널목", UTF8 "저상홈 C + 지붕 A + 건널목"
	, UTF8 "저상홈 A + 지붕 B + 건널목", UTF8 "저상홈 B + 지붕 B + 건널목", UTF8 "저상홈 C + 지붕 B + 건널목"
	, UTF8 "아스팔트 저상홈 A + 건널목", UTF8 "아스팔트 저상홈 B + 건널목", UTF8 "아스팔트 저상홈 C + 건널목"
	, UTF8 "아스팔트 저상홈 A + 지붕 A + 건널목", UTF8 "아스팔트 저상홈 B + 지붕 A + 건널목", UTF8 "아스팔트 저상홈 C + 지붕 A + 건널목"
	, UTF8 "아스팔트 저상홈 A + 지붕 B + 건널목", UTF8 "아스팔트 저상홈 B + 지붕 B + 건널목", UTF8 "아스팔트 저상홈 C + 지붕 B + 건널목"},
	{ALL, "Low Platform A + Crossing", "Low Platform B + Crossing", "Low Platform C + Crossing"
	, "Low Platform A + Roof A + Crossing", "Low Platform B + Roof A + Crossing", "Low Platform C + Roof A + Crossing"
	, "Low Platform A + Roof B + Crossing", "Low Platform B + Roof B + Crossing", "Low Platform C + Roof B + Crossing"
	, "Low Asphalt Platform A + Crossing", "Low Asphalt Platform B + Crossing", "Low Asphalt Platform C + Crossing"
	, "Low Asphalt Platform A + Roof A + Crossing", "Low Asphalt Platform B + Roof A + Crossing", "Low Asphalt Platform C + Roof A + Crossing"
	, "Low Asphalt Platform A + Roof B + Crossing", "Low Asphalt Platform B + Roof B + Crossing", "Low Asphalt Platform C + Roof B + Crossing"}
)

stationnames(CRS,
	{KR, UTF8 "건널목"},
	{ALL, "Crossing"}
)

classnames(BUILDING_START,
	{KR, UTF8 "[KWS] 역사 건물"},
	{ALL, "[KWS] Modular Stations"}
)

stationnames(BUILDING_START,
	{KR, UTF8 "저층 역사", UTF8 "고층 역사"},
	{ALL, "Low Building Block", "High Building Block"}
)

stationnames(BUILDING_LOW_HP_A,
	{KR, UTF8 "고상홈 A + 저층 선상역사", UTF8 "고상홈 B + 저층 선상역사", UTF8 "고상홈 C + 저층 선상역사"
	, UTF8 "고상홈 A + 고층 선상역사", UTF8 "고상홈 B + 고층 선상역사", UTF8 "고상홈 C + 고층 선상역사"
	, UTF8 "저상홈 A + 저층 선상역사", UTF8 "저상홈 B + 저층 선상역사", UTF8 "저상홈 C + 저층 선상역사"
	, UTF8 "저상홈 A + 고층 선상역사", UTF8 "저상홈 B + 고층 선상역사", UTF8 "저상홈 C + 고층 선상역사"
	, UTF8 "아스팔트 저상홈 A + 저층 선상역사", UTF8 "아스팔트 저상홈 B + 저층 선상역사", UTF8 "아스팔트 저상홈 C + 저층 선상역사"
	, UTF8 "아스팔트 저상홈 A + 고층 선상역사", UTF8 "아스팔트 저상홈 B + 고층 선상역사", UTF8 "아스팔트 저상홈 C + 고층 선상역사"},
	{ALL, "High Platform A + Low Overpass", "High Platform B + Low Overpass", "High Platform C + Low Overpass"
	, "High Platform A + High Overpass", "High Platform B + High Overpass", "High Platform C + High Overpass"
	, "Low Platform A + Low Overpass", "Low Platform B + Low Overpass", "Low Platform C + Low Overpass"
	, "Low Platform A + High Overpass", "Low Platform B + High Overpass", "Low Platform C + High Overpass"
	, "Low Asphalt Platform A + Low Overpass", "Low Asphalt Platform B + Low Overpass", "Low Asphalt Platform C + Low Overpass"
	, "Low Asphalt Platform A + High Overpass", "Low Asphalt Platform B + High Overpass", "Low Asphalt Platform C + High Overpass"}
)
	