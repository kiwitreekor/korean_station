define(_xyz, defn({xyz}))
define(_dxdydz, defn({dxdydz}))
define(_ground, defn({ground}))
define(_regular, defn({regular}))

define(_ORIENT, 0)

define(ORIENT_NE, 0)
define(ORIENT_NW, 1)

define(PLT_TYPE_HIGH, 0)
define(PLT_TYPE_LOW, 1)
define(PLT_TYPE_LOW_ASPHALT, 2)

define(PLT_TYPE_NONE, 255)

define(PLT_TYPE_A, 0)
define(PLT_TYPE_B, 1)
define(PLT_TYPE_C, 2)
define(PLT_TYPE_NONTRACK, 3)

define(BUILDING_TYPE_LOW, 0)
define(BUILDING_TYPE_HIGH, 1)

define(SHADOW_FALSE, 0)
define(SHADOW_TRUE, 255)

define(xxyz, {ifelse(_ORIENT, 0, {_xyz($1, $2, $3)}, {_xyz($2, $1, $3)})})
define(xdxdydz, {ifelse(_ORIENT, 0, {_dxdydz($1, $2, $3)}, {_dxdydz($2, $1, $3)})})

define(xground, {dnl
	ifelse(
		$#, 1, {_ground({$1-_ORIENT})},
		$#, 2, {_ground({$1-_ORIENT}, $2)},
		$#, 3, {_ground({$1-_ORIENT}, $2, $3)},
		$#, 4, {_ground({$1-_ORIENT}, $2, $3, $4)},
		{__error(ERR_NUMPAR "{$0}")}
	)dnl
})

define(xregular, {dnl
	ifelse(
		$#, 2, {_regular({$1+_ORIENT}, }$2{)},
		$#, 3, {_regular({$1+_ORIENT}, }$2{, }$3{)},
		$#, 4, {_regular({$1+_ORIENT}, }$2{, }$3{, $4)},
		$#, 5, {_regular({$1+_ORIENT}, }$2{, }$3{, $4, $5)},
		$#, 6, {_regular({$1+_ORIENT}, }$2{, }$3{, $4, $5, $6)},
		{__error(ERR_NUMPAR "{$0}" $1)}
	)dnl
})

define(spritelayout_ground, {ground(spr_ground+1)})
define(spritelayout_ground_snow, {ground(spr_ground_snow+1)})
define(spritelayout_ground_building, {ground(spr_ground_building, CUSTOM, aslflags({OFFSET_SPRITE}), registers({REGISTER_BUILDING_GROUND_OFFSET+$1}))})
define(spritelayout_ground_nontrack, {_ground(spr_ground_nontrack, aslflags({OFFSET_SPRITE}), registers({REGISTER_GROUND_NONTRACK_OFFSET}))})

define(get_platform_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform, $1, PLT_TYPE_LOW, spr_platform_l, spr_platform_la)})
define(get_platform_nontrack_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_nontrack, $1, PLT_TYPE_LOW, spr_platform_l_nontrack, spr_platform_la_nontrack)})
define(get_platform_crossing_sprite, {ifelse($1, PLT_TYPE_LOW, spr_platform_c, spr_platform_ca)})
define(get_platform_height, {ifelse($1, PLT_TYPE_HIGH, 3, 1)})

define(get_building_sprite, {ifelse($1, BUILDING_TYPE_LOW, spr_building_low, spr_building_high)})
define(get_building_overpass_sprite, {ifelse($1, BUILDING_TYPE_LOW, spr_bdoverpass_low, spr_bdoverpass_high)})
define(get_building_height, {ifelse($1, BUILDING_TYPE_LOW, 26, 50)})

define(spritelayout_platformA, {regular(get_platform_sprite($1), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platformB, {regular(get_platform_sprite($1)+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platform_nontrack, {regular(get_platform_nontrack_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platform, {ifelse($1, PLT_TYPE_A, {spritelayout_platformA($2, $3)}, $1, PLT_TYPE_B, {spritelayout_platformB($2, $3)}, $1, PLT_TYPE_C, {spritelayout_platformA($2, $3) spritelayout_platformB($2, $3)}, $1, PLT_TYPE_NONTRACK, {spritelayout_platform_nontrack($2, $3)}, {})})

define(spritelayout_crossingA, {regular(get_platform_crossing_sprite($1)+$2*4, xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($3, 0, REGISTER_CROSSING_OFFSET, REGISTER_CROSSING_SHADOW_OFFSET)}))})
define(spritelayout_crossingB, {regular(get_platform_crossing_sprite($1)+$2*4+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($3, 0, REGISTER_CROSSING_OFFSET, REGISTER_CROSSING_SHADOW_OFFSET)}))})
define(spritelayout_crossing, {ifelse($1, PLT_TYPE_A, {spritelayout_crossingA($2, $3, $4)}, $1, PLT_TYPE_B, {spritelayout_crossingB($2, $3, $4)}, {spritelayout_crossingA($2, $3, $4) spritelayout_crossingB($2, $3, $4)})})

define(spritelayout_building, {regular(get_building_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_building_height($1)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUILDING_OFFSET+$2}))})

define(spritelayout_passengerA, {regular(spr_passengers, xyz(0, 0, $1), dxdydz(16, 6, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_PASSENGER_SKIP, REGISTER_PASSENGER_OFFSET}))})
define(spritelayout_passengerB, {regular(spr_passengers+2, xyz(0, 10, $1), dxdydz(16, 6, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_PASSENGER_SKIP, REGISTER_PASSENGER_OFFSET}))})
define(spritelayout_passenger, {ifelse($1, PLT_TYPE_A, {spritelayout_passengerA($2)}, $1, PLT_TYPE_B, {spritelayout_passengerB($2)}, {spritelayout_passengerA($2) spritelayout_passengerB($2)})})

define(spritelayout_building_overpass, {regular(get_building_overpass_sprite($1), xyz(0, 0, 12), dxdydz(16, 16, get_building_height($1)-12), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUILDING_OVERPASS_OFFSET}))})

define(spritelayout_roofA_A, {
	regular(spr_poles, xyz(0, 0, $1), dxdydz(16, 0, 10))
	regular(spr_roofs, xyz(0, 0, 10+$1), dxdydz(16, 6, 3), aslflags({OFFSET_SPRITE}), registers({REGISTER_ROOF_OFFSET}))
})
define(spritelayout_roofA_B, {
	regular(spr_poles+2, xyz(0, 16, $1), dxdydz(16, 0, 10))
	regular(spr_roofs+2, xyz(0, 10, 10+$1), dxdydz(16, 6, 3), aslflags({OFFSET_SPRITE}), registers({REGISTER_ROOF_OFFSET}))
})
define(spritelayout_roofA_nontrack, {
	regular(spr_poles, xyz(0, 0, $1), dxdydz(16, 0, 10))
	regular(spr_poles+2, xyz(0, 16, $1), dxdydz(16, 0, 10))
	regular(spr_roofs+4, xyz(0, 0, 10+$1), dxdydz(16, 16, 3), aslflags({OFFSET_SPRITE}), registers({REGISTER_ROOF_OFFSET}))
})

define(spritelayout_roofB_A, {
	regular(spr_poles+4, xyz(0, 3, $1), dxdydz(16, 0, 10))
	regular(spr_roofs+6, xyz(0, 0, 10+$1), dxdydz(16, 6, 3), aslflags({OFFSET_SPRITE}), registers({REGISTER_ROOF_OFFSET}))
})
define(spritelayout_roofB_B, {
	regular(spr_poles+6, xyz(0, 13, $1), dxdydz(16, 0, 10))
	regular(spr_roofs+8, xyz(0, 10, 10+$1), dxdydz(16, 6, 3), aslflags({OFFSET_SPRITE}), registers({REGISTER_ROOF_OFFSET}))
})
define(spritelayout_roofB_nontrack, {
	regular(spr_poles+4, xyz(0, 4, $1), dxdydz(16, 0, 10))
	regular(spr_poles+6, xyz(0, 12, $1), dxdydz(16, 0, 10))
	regular(spr_roofs+10, xyz(0, 0, 10+$1), dxdydz(16, 16, 3), aslflags({OFFSET_SPRITE}), registers({REGISTER_ROOF_OFFSET}))
})

define(xtile, {dnl
	pushdef({ground}, defn({xground}))pushdef({regular}, defn({xregular}))pushdef({xyz}, defn({xxyz}))pushdef({dxdydz}, defn({xdxdydz}))dnl
	define({_ORIENT}, 0) tile($1) define({_ORIENT}, 1) tile($1)dnl
	popdef({ground})popdef({regular})popdef({xyz})popdef({dxdydz})dnl
})

define(platform_base, {
	spritelayout_platform($1, $2, $3)
	spritelayout_passenger($1, get_platform_height($2))
})

define(LAYOUT_PLATFORM_BASE, {
	xtile({
		ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
		platform_base($1, $2, ifelse(eval($#>3), 1, {$4}, SHADOW_FALSE))
		ifelse(eval($#>2), 1, {$3})
	})
	xtile({
		ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
		platform_base($1, $2, ifelse(eval($#>3), 1, {$4}, SHADOW_FALSE))
		ifelse(eval($#>2), 1, {$3})
	})
})

define(LAYOUT_HP_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_HP_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_HP_C, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_HIGH)})
define(LAYOUT_HP_NONTRACK, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH)})

define(LAYOUT_HP_A_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_HIGH, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})
define(LAYOUT_HP_B_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_HIGH, {spritelayout_roofA_B(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})
define(LAYOUT_HP_C_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_HIGH, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_HIGH)) spritelayout_roofA_B(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})
define(LAYOUT_HP_NONTRACK_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH, {spritelayout_roofA_nontrack(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})

define(LAYOUT_HP_A_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_HIGH, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})
define(LAYOUT_HP_B_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_HIGH, {spritelayout_roofB_B(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})
define(LAYOUT_HP_C_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_HIGH, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_HIGH)) spritelayout_roofB_B(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})
define(LAYOUT_HP_NONTRACK_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH, {spritelayout_roofB_nontrack(get_platform_height(PLT_TYPE_HIGH))}, SHADOW_TRUE)})

define(LAYOUT_LP_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_LP_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_LP_C, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW)})
define(LAYOUT_LP_NONTRACK, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW)})

define(LAYOUT_LP_A_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_B_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW, {spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_C_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW)) spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_NONTRACK_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW, {spritelayout_roofA_nontrack(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})

define(LAYOUT_LP_A_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_B_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW, {spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_C_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW)) spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_NONTRACK_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW, {spritelayout_roofB_nontrack(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})

define(LAYOUT_LAP_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_C, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_NONTRACK, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_LAP_A_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_B_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_C_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW_ASPHALT)) spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_NONTRACK_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_nontrack(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})

define(LAYOUT_LAP_A_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_B_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_C_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW_ASPHALT)) spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_NONTRACK_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_nontrack(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})


define(LAYOUT_CROSSING_BASE, {
	xtile({
		spritelayout_ground()
		regular(spr_crossing, xyz(7, 0, 0), dxdydz(3, 16, 0))
		spritelayout_crossing($1, $2, 0, ifelse(eval($#>3), 1, {$4}, SHADOW_FALSE))
		spritelayout_passenger($1, get_platform_height($2))
		ifelse(eval($#>2), 1, {$3})
	})
	xtile({
		spritelayout_ground()
		regular(spr_crossing, xyz(13, 0, 0), dxdydz(3, 16, 0))
		spritelayout_crossing($1, $2, 1, ifelse(eval($#>3), 1, {$4}, SHADOW_FALSE))
		spritelayout_passenger($1, get_platform_height($2))
		ifelse(eval($#>2), 1, {$3})
	})
	xtile({
		spritelayout_ground()
		regular(spr_crossing, xyz(0, 0, 0), dxdydz(3, 16, 0))
		spritelayout_crossing($1, $2, 2, ifelse(eval($#>3), 1, {$4}, SHADOW_FALSE))
		spritelayout_passenger($1, get_platform_height($2))
		ifelse(eval($#>2), 1, {$3})
	})
})

define(LAYOUT_LP_A_CR, {LAYOUT_CROSSING_BASE(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_LP_B_CR, {LAYOUT_CROSSING_BASE(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_LP_C_CR, {LAYOUT_CROSSING_BASE(PLT_TYPE_C, PLT_TYPE_LOW)})

define(LAYOUT_LP_A_CR_RF_A, {LAYOUT_CROSSING_BASE(PLT_TYPE_A, PLT_TYPE_LOW, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_B_CR_RF_A, {LAYOUT_CROSSING_BASE(PLT_TYPE_B, PLT_TYPE_LOW, {spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_C_CR_RF_A, {LAYOUT_CROSSING_BASE(PLT_TYPE_C, PLT_TYPE_LOW, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW)) spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})

define(LAYOUT_LP_A_CR_RF_B, {LAYOUT_CROSSING_BASE(PLT_TYPE_A, PLT_TYPE_LOW, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_B_CR_RF_B, {LAYOUT_CROSSING_BASE(PLT_TYPE_B, PLT_TYPE_LOW, {spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})
define(LAYOUT_LP_C_CR_RF_B, {LAYOUT_CROSSING_BASE(PLT_TYPE_C, PLT_TYPE_LOW, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW)) spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW))}, SHADOW_TRUE)})

define(LAYOUT_LAP_A_CR, {LAYOUT_CROSSING_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_B_CR, {LAYOUT_CROSSING_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_C_CR, {LAYOUT_CROSSING_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_LAP_A_CR_RF_A, {LAYOUT_CROSSING_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_B_CR_RF_A, {LAYOUT_CROSSING_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_C_CR_RF_A, {LAYOUT_CROSSING_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofA_A(get_platform_height(PLT_TYPE_LOW_ASPHALT)) spritelayout_roofA_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})

define(LAYOUT_LAP_A_CR_RF_B, {LAYOUT_CROSSING_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_B_CR_RF_B, {LAYOUT_CROSSING_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})
define(LAYOUT_LAP_C_CR_RF_B, {LAYOUT_CROSSING_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, {spritelayout_roofB_A(get_platform_height(PLT_TYPE_LOW_ASPHALT)) spritelayout_roofB_B(get_platform_height(PLT_TYPE_LOW_ASPHALT))}, SHADOW_TRUE)})

define(LAYOUT_TRACK_CR, {
	xtile({
		spritelayout_ground()
		regular(spr_crossing, xyz(7,0,0), dxdydz(3,16,0))
	})
	xtile({
		spritelayout_ground()
		regular(spr_crossing, xyz(13,0,0), dxdydz(3,16,0))
	})
	xtile({
		spritelayout_ground()
		regular(spr_crossing, xyz(0,0,0), dxdydz(3,16,0))
	})
	xtile({
		spritelayout_ground_snow()
		regular(spr_crossing, xyz(7,0,0), dxdydz(3,16,0))
	})
	xtile({
		spritelayout_ground_snow()
		regular(spr_crossing, xyz(13,0,0), dxdydz(3,16,0))
	})
	xtile({
		spritelayout_ground_snow()
		regular(spr_crossing, xyz(0,0,0), dxdydz(3,16,0))
	})
})

define(LAYOUT_BUILDING_BASE, {
	tile(
		spritelayout_ground_building(ORIENT_NE)
		spritelayout_building($1, ORIENT_NE)
	)
	tile(
		spritelayout_ground_building(ORIENT_NW)
		spritelayout_building($1, ORIENT_NW)
	)
})

define(LAYOUT_BUILDING_LOW, {LAYOUT_BUILDING_BASE(BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_HIGH, {LAYOUT_BUILDING_BASE(BUILDING_TYPE_HIGH)})

define(building_overpass_pole, {
	ifelse($1, PLT_TYPE_A, {
		ifelse($2, PLT_TYPE_HIGH, {
			regular(spr_building_pole_hp, xyz( 0, 0, 3), dxdydz(16, 0, 9), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
			regular(spr_building_pole,    xyz( 0,16, 0), dxdydz(16, 0,12), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
		},{
			regular(spr_building_pole_lp, xyz( 0, 0, 1), dxdydz(16, 0,11), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
			regular(spr_building_pole,    xyz( 0,16, 0), dxdydz(16, 0,12), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
		})
	}, 
	$1, PLT_TYPE_B, {
		ifelse($2, PLT_TYPE_HIGH, {
			regular(spr_building_pole,    xyz( 0, 0, 0), dxdydz(16, 0,12), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
			regular(spr_building_pole_hp, xyz( 0,16, 3), dxdydz(16, 0, 9), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
		},{
			regular(spr_building_pole,    xyz( 0, 0, 0), dxdydz(16, 0,12), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
			regular(spr_building_pole_lp, xyz( 0,16, 1), dxdydz(16, 0,11), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
		})
	},
	$1, PLT_TYPE_C, {
		ifelse($2, PLT_TYPE_HIGH, {
			regular(spr_building_pole_hp, xyz( 0, 0, 3), dxdydz(16, 0, 9), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
			regular(spr_building_pole_hp, xyz( 0,16, 3), dxdydz(16, 0, 9), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
		},{
			regular(spr_building_pole_lp, xyz( 0, 0, 1), dxdydz(16, 0,11), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
			regular(spr_building_pole_lp, xyz( 0,16, 1), dxdydz(16, 0,11), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
		})
	},
	$1, PLT_TYPE_NONE, {
		regular(spr_building_pole, xyz( 0, 0, 0), dxdydz(16, 0,12), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP}))
		regular(spr_building_pole, xyz( 0,16, 0), dxdydz(16, 0,12), aslflags({SKIP}), registers({REGISTER_BUILDING_POLE_SKIP+1}))
	},
	{})
})

define(LAYOUT_BUILDING_OVERPASS_BASE, {
	xtile({
		spritelayout_ground()
		ifelse($1, PLT_TYPE_NONE, {}, {platform_base($1, $2, SHADOW_TRUE)})
		building_overpass_pole($1, $2)
		spritelayout_building_overpass($3)
	})
})

define(LAYOUT_BUILDING_LOW_HP_A, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_A, PLT_TYPE_HIGH, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_LOW_HP_B, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_B, PLT_TYPE_HIGH, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_LOW_HP_C, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_C, PLT_TYPE_HIGH, BUILDING_TYPE_LOW)})

define(LAYOUT_BUILDING_HIGH_HP_A, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_A, PLT_TYPE_HIGH, BUILDING_TYPE_HIGH)})
define(LAYOUT_BUILDING_HIGH_HP_B, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_B, PLT_TYPE_HIGH, BUILDING_TYPE_HIGH)})
define(LAYOUT_BUILDING_HIGH_HP_C, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_C, PLT_TYPE_HIGH, BUILDING_TYPE_HIGH)})

define(LAYOUT_BUILDING_LOW_LP_A, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_A, PLT_TYPE_LOW, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_LOW_LP_B, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_B, PLT_TYPE_LOW, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_LOW_LP_C, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_C, PLT_TYPE_LOW, BUILDING_TYPE_LOW)})

define(LAYOUT_BUILDING_HIGH_LP_A, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_A, PLT_TYPE_LOW, BUILDING_TYPE_HIGH)})
define(LAYOUT_BUILDING_HIGH_LP_B, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_B, PLT_TYPE_LOW, BUILDING_TYPE_HIGH)})
define(LAYOUT_BUILDING_HIGH_LP_C, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_C, PLT_TYPE_LOW, BUILDING_TYPE_HIGH)})

define(LAYOUT_BUILDING_LOW_LAP_A, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_LOW_LAP_B, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_LOW_LAP_C, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, BUILDING_TYPE_LOW)})

define(LAYOUT_BUILDING_HIGH_LAP_A, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, BUILDING_TYPE_HIGH)})
define(LAYOUT_BUILDING_HIGH_LAP_B, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, BUILDING_TYPE_HIGH)})
define(LAYOUT_BUILDING_HIGH_LAP_C, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, BUILDING_TYPE_HIGH)})

define(LAYOUT_BUILDING_LOW_TRACK, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_NONE, PLT_TYPE_NONE, BUILDING_TYPE_LOW)})
define(LAYOUT_BUILDING_HIGH_TRACK, {LAYOUT_BUILDING_OVERPASS_BASE(PLT_TYPE_NONE, PLT_TYPE_NONE, BUILDING_TYPE_HIGH)})


