define(get_building_sprite, {ifelse($1, MODULAR_TYPE_LOW, spr_building_low, spr_building_high)})
define(get_building_overpass_sprite, {ifelse($1, MODULAR_TYPE_LOW, spr_bdoverpass_low, spr_bdoverpass_high)})
define(get_building_height, {ifelse($1, MODULAR_TYPE_LOW, 26, 50)})
define(get_building_pole_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_building_pole_hp, $1, PLT_TYPE_LOW, spr_building_pole_lp, $1, PLT_TYPE_LOW_ASPHALT, spr_building_pole_lp, spr_building_pole)})

define(spritelayout_building, {compcol(get_building_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_building_height($1)), aslflags({OFFSET_SPRITE}), registers({REGISTER_MODULAR_OFFSET+$2}))})
define(spritelayout_building_overpass, {compcol(get_building_overpass_sprite($1), xyz(0, 0, 12), dxdydz(16, 16, get_building_height($1)-12), aslflags({OFFSET_SPRITE}), registers({REGISTER_MODULAR_OVERPASS_OFFSET}))})

define(spritelayout_building_pole, {regular(get_building_pole_sprite($1), xyz( 0, eval($2*16), get_platform_height($1)), dxdydz(16, 0, eval(12 - get_platform_height($1))), aslflags({SKIP}), registers({REGISTER_MODULAR_POLE_SKIP + $2}))})

define(LAYOUT_TEMPLATE_MODULAR, {
	tile(
		spritelayout_ground_building(ORIENT_NE)
		spritelayout_building($1, ORIENT_NE)
	)
	tile(
		spritelayout_ground_building(ORIENT_NW)
		spritelayout_building($1, ORIENT_NW)
	)
})

define(LAYOUT_MODULAR_LOW, {LAYOUT_TEMPLATE_MODULAR(MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_HIGH, {LAYOUT_TEMPLATE_MODULAR(MODULAR_TYPE_HIGH)})

define(building_overpass_pole, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_building_pole($2, 0)
		spritelayout_building_pole(PLT_TYPE_NONE, 1)
	}, $1, PLT_TYPE_B, {
		spritelayout_building_pole(PLT_TYPE_NONE, 0)
		spritelayout_building_pole($2, 1)
	}, $1, PLT_TYPE_C, {
		spritelayout_building_pole($2, 0)
		spritelayout_building_pole($2, 1)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_building_pole($2, 0)
		spritelayout_building_pole($3, 1)
	}, $1, PLT_TYPE_NONE, {
		spritelayout_building_pole(PLT_TYPE_NONE, 0)
		spritelayout_building_pole(PLT_TYPE_NONE, 1)
	})
})

define(LAYOUT_TEMPLATE_MODULAR_OVERPASS_SINGLE, {
	define({tmp_modular_type}, {ifelse($1, PLT_TYPE_MULTI, $4, $3)})
	xtile({
		spritelayout_ground()
		ifelse($1, PLT_TYPE_NONE, {}, {platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), SHADOW_TRUE)})
		building_overpass_pole($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_building_overpass(tmp_modular_type)
	})
})

define(LAYOUT_TEMPLATE_MODULAR_OVERPASS, {LAYOUT_TEMPLATE_MULTI({LAYOUT_TEMPLATE_MODULAR_OVERPASS_SINGLE}, $@)})

define(LAYOUT_MODULAR_LOW_HP_A, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_A, PLT_TYPE_HIGH, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_LOW_HP_B, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_B, PLT_TYPE_HIGH, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_LOW_HP_C, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_C, PLT_TYPE_HIGH, MODULAR_TYPE_LOW)})

define(LAYOUT_MODULAR_HIGH_HP_A, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_A, PLT_TYPE_HIGH, MODULAR_TYPE_HIGH)})
define(LAYOUT_MODULAR_HIGH_HP_B, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_B, PLT_TYPE_HIGH, MODULAR_TYPE_HIGH)})
define(LAYOUT_MODULAR_HIGH_HP_C, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_C, PLT_TYPE_HIGH, MODULAR_TYPE_HIGH)})

define(LAYOUT_MODULAR_LOW_LP_A, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_LOW_LP_B, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_LOW_LP_C, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW, MODULAR_TYPE_LOW)})

define(LAYOUT_MODULAR_HIGH_LP_A, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW, MODULAR_TYPE_HIGH)})
define(LAYOUT_MODULAR_HIGH_LP_B, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW, MODULAR_TYPE_HIGH)})
define(LAYOUT_MODULAR_HIGH_LP_C, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW, MODULAR_TYPE_HIGH)})

define(LAYOUT_MODULAR_LOW_LAP_A, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_LOW_LAP_B, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_LOW_LAP_C, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, MODULAR_TYPE_LOW)})

define(LAYOUT_MODULAR_HIGH_LAP_A, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, MODULAR_TYPE_HIGH)})
define(LAYOUT_MODULAR_HIGH_LAP_B, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, MODULAR_TYPE_HIGH)})
define(LAYOUT_MODULAR_HIGH_LAP_C, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, MODULAR_TYPE_HIGH)})

define(LAYOUT_MODULAR_LOW_TRACK, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_NONE, PLT_TYPE_NONE, MODULAR_TYPE_LOW)})
define(LAYOUT_MODULAR_HIGH_TRACK, {LAYOUT_TEMPLATE_MODULAR_OVERPASS(PLT_TYPE_NONE, PLT_TYPE_NONE, MODULAR_TYPE_HIGH)})

define(LAYOUT_SIMPLE_STN, {
	xtile({
		spritelayout_ground_nontrack_concrete()
		regular(spr_simple_stn, xyz(0,0,0), dxdydz(16,16,30))
	})
	xtile({
		spritelayout_ground_nontrack_concrete()
		regular(spr_simple_stn+2, xyz(0,0,0), dxdydz(16,16,30))
	})
})

define(get_overpass_stair_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_overpass_stair, $1, PLT_TYPE_LOW, spr_overpass_stair_low, $1, PLT_TYPE_LOW_ASPHALT, spr_overpass_stair_low, spr_overpass_stair)})

define(spritelayout_overpass_stair, {
	ifelse($1, PLT_TYPE_A, {
		regular(get_overpass_stair_sprite($2), xyz(0, 0, get_platform_height($2)), dxdydz(16, 3, 16), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_STAIR_OFFEST}))
	}, $1, PLT_TYPE_B, {
		regular(get_overpass_stair_sprite($2), xyz(0, 13, get_platform_height($2)), dxdydz(16, 3, 16), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_STAIR_OFFEST}))
	}, $1, PLT_TYPE_C, {
		regular(get_overpass_stair_sprite($2), xyz(0, 0, get_platform_height($2)), dxdydz(16, 3, 16), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_STAIR_OFFEST}))
		regular(get_overpass_stair_sprite($2), xyz(0, 13, get_platform_height($2)), dxdydz(16, 3, 16), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_STAIR_OFFEST}))
	}, $1, PLT_TYPE_MULTI, {
		regular(get_overpass_stair_sprite($2), xyz(0, 0, get_platform_height($2)), dxdydz(16, 3, 16), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_STAIR_OFFEST}))
		regular(get_overpass_stair_sprite($3), xyz(0, 13, get_platform_height($3)), dxdydz(16, 3, 16), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_STAIR_OFFEST}))
	}, {})
})

define(LAYOUT_TEMPLATE_OVERPASS_STAIR_SINGLE, {
	define({tmp_roof}, {ifelse($1, PLT_TYPE_MULTI, $4, $3)})
	define({tmp_ground}, {ifelse($1, PLT_TYPE_MULTI, $5, $4)})
	xtile({
		tmp_ground
		ifelse($1, PLT_TYPE_NONE, {}, {platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), eval(tmp_roof != ROOF_TYPE_NONE))})
		spritelayout_overpass_stair($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_roof(tmp_roof, $1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), ROOF_TYPE_OVERPASS)
	})
})

define(LAYOUT_TEMPLATE_OVERPASS_STAIR_SNOW, {
	LAYOUT_TEMPLATE_OVERPASS_STAIR_SINGLE($@, {spritelayout_ground()})
	LAYOUT_TEMPLATE_OVERPASS_STAIR_SINGLE($@, {spritelayout_ground_snow()})
})

define(LAYOUT_TEMPLATE_OVERPASS_STAIR, {LAYOUT_TEMPLATE_MULTI({LAYOUT_TEMPLATE_OVERPASS_STAIR_SNOW}, $@)})

define(LAYOUT_OVERPASS_STAIR_HP_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_OVERPASS_STAIR_HP_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_OVERPASS_STAIR_HP_C, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_HIGH)})

define(LAYOUT_OVERPASS_STAIR_HP_A_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_STAIR_HP_B_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_STAIR_HP_C_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A)})

define(LAYOUT_OVERPASS_STAIR_HP_A_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_STAIR_HP_B_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_STAIR_HP_C_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B)})

define(LAYOUT_OVERPASS_STAIR_LP_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_OVERPASS_STAIR_LP_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_OVERPASS_STAIR_LP_C, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_LOW)})

define(LAYOUT_OVERPASS_STAIR_LP_A_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_STAIR_LP_B_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_STAIR_LP_C_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A)})

define(LAYOUT_OVERPASS_STAIR_LP_A_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_STAIR_LP_B_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_STAIR_LP_C_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B)})

define(LAYOUT_OVERPASS_STAIR_LAP_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_OVERPASS_STAIR_LAP_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_OVERPASS_STAIR_LAP_C, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_OVERPASS_STAIR_LAP_A_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_STAIR_LAP_B_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_STAIR_LAP_C_RF_A, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})

define(LAYOUT_OVERPASS_STAIR_LAP_A_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_STAIR_LAP_B_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_STAIR_LAP_C_RF_B, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})

define(LAYOUT_OVERPASS_STAIR_TRACK, {LAYOUT_TEMPLATE_OVERPASS_STAIR(PLT_TYPE_NONE, PLT_TYPE_NONE)})