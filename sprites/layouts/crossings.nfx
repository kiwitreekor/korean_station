define(get_platform_crossing_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_ch, $1, PLT_TYPE_LOW, spr_platform_c, spr_platform_ca)})

define(spritelayout_crossingA, {regular(get_platform_crossing_sprite($1)+$2*4, xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($3, 0, REGISTER_CROSSING_OFFSET, REGISTER_CROSSING_SHADOW_OFFSET)}))})
define(spritelayout_crossingB, {regular(get_platform_crossing_sprite($1)+$2*4+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($3, 0, REGISTER_CROSSING_OFFSET, REGISTER_CROSSING_SHADOW_OFFSET)}))})
define(spritelayout_crossing, {ifelse($1, PLT_TYPE_A, {spritelayout_crossingA($2, $3, $4)}, $1, PLT_TYPE_B, {spritelayout_crossingB($2, $3, $4)}, {spritelayout_crossingA($2, $3, $4) spritelayout_crossingB($2, $3, $4)})})

define(LAYOUT_CROSSING_BASE, {
	define({tmp_shadow}, eval($3 != ROOF_TYPE_NONE))
	define({tmp_roof_layout}, {ifelse($3, ROOF_TYPE_A, {spritelayout_roofA($1, $2)}, $3, ROOF_TYPE_B, {spritelayout_roofB($1, $2)})})
	xtile({
		$4
		regular(spr_crossing, xyz(7, 0, 0), dxdydz(3, 16, 0))
		spritelayout_crossing($1, $2, 0, tmp_shadow)
		spritelayout_passenger($1, get_platform_height($2))
		spritelayout_roof($3, $1, $2)
	})
	xtile({
		$4
		regular(spr_crossing, xyz(13, 0, 0), dxdydz(3, 16, 0))
		spritelayout_crossing($1, $2, 1, tmp_shadow)
		spritelayout_passenger($1, get_platform_height($2))
		spritelayout_roof($3, $1, $2)
	})
	xtile({
		$4
		regular(spr_crossing, xyz(0, 0, 0), dxdydz(3, 16, 0))
		spritelayout_crossing($1, $2, 2, tmp_shadow)
		spritelayout_passenger($1, get_platform_height($2))
		spritelayout_roof($3, $1, $2)
	})
})

define(LAYOUT_CROSSING_BASE_SNOW, {
	define({tmp_roof}, {ifelse(eval($#>2), 1, $3, ROOF_TYPE_NONE)})
	LAYOUT_CROSSING_BASE($1, $2, tmp_roof, {spritelayout_ground()}) 
	LAYOUT_CROSSING_BASE($1, $2, tmp_roof, {spritelayout_ground_snow()})
})

define(LAYOUT_HP_A_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_HP_B_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_HP_C_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_HIGH)})

define(LAYOUT_HP_A_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_B_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_C_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A)})

define(LAYOUT_HP_A_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_B_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_C_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B)})

define(LAYOUT_LP_A_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_LP_B_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_LP_C_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW)})

define(LAYOUT_LP_A_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_B_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_C_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A)})

define(LAYOUT_LP_A_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_B_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_C_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B)})

define(LAYOUT_LAP_A_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_B_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_C_CR, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_LAP_A_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_B_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_C_CR_RF_A, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})

define(LAYOUT_LAP_A_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_B_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_C_CR_RF_B, {LAYOUT_CROSSING_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})


define(LAYOUT_TRACK_CR_BASE, {
	xtile({
		$1
		regular(spr_crossing, xyz(7,0,0), dxdydz(3,16,0))
	})
	xtile({
		$1
		regular(spr_crossing, xyz(13,0,0), dxdydz(3,16,0))
	})
	xtile({
		$1
		regular(spr_crossing, xyz(0,0,0), dxdydz(3,16,0))
	})
})

define(LAYOUT_TRACK_CR, {
	LAYOUT_TRACK_CR_BASE({spritelayout_ground()})
	LAYOUT_TRACK_CR_BASE({spritelayout_ground_snow()})
})