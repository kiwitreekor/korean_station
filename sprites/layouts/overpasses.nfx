define(get_overpass_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_overpass, spr_overpass+12)})
define(get_overpass_overlay_sprite, {ifelse($1, PLT_TYPE_A, spr_overpass+6, $1, PLT_TYPE_B, spr_overpass+8, $1, PLT_TYPE_C, spr_overpass+10, spr_overpass+4)})
define(get_overpass_guide_sprites, {ifelse($1, PLT_TYPE_A, {ifelse($2, 1, spr_overpass_guide, spr_overpass_guide+2)}, $1, PLT_TYPE_B, {ifelse($2, 1, spr_overpass_guide+4, spr_overpass_guide+6)})})

define(spritelayout_overpass, {
	ifelse($1, PLT_TYPE_A, {
		regular(get_overpass_sprite($2), xyz(0, 0, get_platform_height($2)), dxdydz(16, 3, 22-get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
		$3
		regular(get_overpass_overlay_sprite($1), xyz(7, 0, 14), dxdydz(3, {ifelse($1, PLT_TYPE_A, 16, 10)}, 8), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
	}, $1, PLT_TYPE_B, {
		regular(get_overpass_overlay_sprite($1), xyz(7, 0, 14), dxdydz(3, {ifelse($1, PLT_TYPE_A, 16, 10)}, 8), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
		$3
		regular(get_overpass_sprite($2)+2, xyz(0, 13, get_platform_height($2)), dxdydz(16, 3, 22-get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
	}, $1, PLT_TYPE_C, {
		regular(get_overpass_sprite($2), xyz(0, 0, get_platform_height($2)), dxdydz(16, 3, 22-get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
		$3
		regular(get_overpass_overlay_sprite($1), xyz(7, 0, 14), dxdydz(3, {ifelse($1, PLT_TYPE_A, 16, 10)}, 8), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
		regular(get_overpass_sprite($2)+2, xyz(0, 13, get_platform_height($2)), dxdydz(16, 3, 22-get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
	}, $1, PLT_TYPE_NONE, {
		regular(get_overpass_overlay_sprite($1), xyz(7, 0, 14), dxdydz(3, {ifelse($1, PLT_TYPE_A, 16, 10)}, 8), aslflags({OFFSET_SPRITE}), registers({REGISTER_OVERPASS_OFFSET}))
	}, {})
})

define(spritelayout_overpass_guide, {
	define({tmp_register}, {ifelse($4, SHADOW_TRUE, {REGISTER_OVERPASS_GUIDE_OFFSET}, {REGISTER_NONE})})
	ifelse($1, PLT_TYPE_A, {
		regular(get_overpass_guide_sprites(PLT_TYPE_A, $3), xyz(0, 0, get_platform_height($2)), dxdydz(16, 6, 0), aslflags({OFFSET_SPRITE}), registers(tmp_register))
	}, $1, PLT_TYPE_B, {
		regular(get_overpass_guide_sprites(PLT_TYPE_B, $3), xyz(0, 10, get_platform_height($2)), dxdydz(16, 6, 0), aslflags({OFFSET_SPRITE}), registers(tmp_register))
	}, $1, PLT_TYPE_C, {
		regular(get_overpass_guide_sprites(PLT_TYPE_A, $3), xyz(0, 0, get_platform_height($2)), dxdydz(16, 6, 0), aslflags({OFFSET_SPRITE}), registers(tmp_register))
		regular(get_overpass_guide_sprites(PLT_TYPE_B, $3), xyz(0, 10, get_platform_height($2)), dxdydz(16, 6, 0), aslflags({OFFSET_SPRITE}), registers(tmp_register))
	}, {})
})


define(LAYOUT_OVERPASS_BASE, {
	xtile({
		$4
		ifelse($1, PLT_TYPE_NONE, {}, {platform_base($1, $2, SHADOW_TRUE)})
		spritelayout_overpass($1, $2, spritelayout_roof($3, $1, $2, ROOF_TYPE_OVERPASS))
	})
	ifelse($1, PLT_TYPE_NONE, {}, {
		forloop(X, {
			xtile({
				$4
				platform_base($1, $2, eval($3 != ROOF_TYPE_NONE))
				spritelayout_overpass_guide($1, $2, X, eval($3 != ROOF_TYPE_NONE))
				spritelayout_roof($3, $1, $2)
			})
		}, OVERPASS_GUIDE_FRONT .. OVERPASS_GUIDE_BACK)
	})
})

define(LAYOUT_OVERPASS_BASE_SNOW, {
	define({tmp_roof}, {ifelse(eval($#>2), 1, $3, ROOF_TYPE_NONE)})
	LAYOUT_OVERPASS_BASE($1, $2, tmp_roof, {spritelayout_ground()})
	LAYOUT_OVERPASS_BASE($1, $2, tmp_roof, {spritelayout_ground_snow()})
})

define(LAYOUT_OVERPASS_HP_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_OVERPASS_HP_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_OVERPASS_HP_C, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_HIGH)})

define(LAYOUT_OVERPASS_HP_A_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_HP_B_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_HP_C_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A)})

define(LAYOUT_OVERPASS_HP_A_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_HP_B_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_HP_C_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B)})

define(LAYOUT_OVERPASS_LP_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_OVERPASS_LP_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_OVERPASS_LP_C, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW)})

define(LAYOUT_OVERPASS_LP_A_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_LP_B_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_LP_C_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A)})

define(LAYOUT_OVERPASS_LP_A_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_LP_B_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_LP_C_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B)})

define(LAYOUT_OVERPASS_LAP_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_OVERPASS_LAP_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_OVERPASS_LAP_C, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_OVERPASS_LAP_A_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_LAP_B_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_OVERPASS_LAP_C_RF_A, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})

define(LAYOUT_OVERPASS_LAP_A_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_LAP_B_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_OVERPASS_LAP_C_RF_B, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})

define(LAYOUT_OVERPASS_TRACK, {LAYOUT_OVERPASS_BASE_SNOW(PLT_TYPE_NONE, PLT_TYPE_NONE)})