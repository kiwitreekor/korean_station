define(get_platform_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform, $1, PLT_TYPE_LOW, spr_platform_l, spr_platform_la)})
define(get_platform_nontrack_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_nontrack, $1, PLT_TYPE_LOW, spr_platform_l_nontrack, spr_platform_la_nontrack)})
define(get_platform_buffer_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_buffer, $1, PLT_TYPE_LOW, spr_platform_l_buffer, spr_platform_la_buffer)})
define(get_platform_buffer_end_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_buffer_end, $1, PLT_TYPE_LOW, spr_platform_l_buffer_end, spr_platform_la_buffer_end)})
define(get_platform_height, {ifelse($1, PLT_TYPE_HIGH, 3, $1, PLT_TYPE_NONE, 0, 1)})

define(spritelayout_platformA, {notransparency(get_platform_sprite($1), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platformB, {notransparency(get_platform_sprite($1)+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platform_nontrack, {notransparency(get_platform_nontrack_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})

define(spritelayout_passengerA, {regular(spr_passengers, xyz(0, 0, $1), dxdydz(16, 6, 5), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_PASSENGER_SKIP, REGISTER_PASSENGER_OFFSET}))})
define(spritelayout_passengerB, {regular(spr_passengers+2, xyz(0, 10, $1), dxdydz(16, 6, 5), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_PASSENGER_SKIP, REGISTER_PASSENGER_OFFSET}))})

define(spritelayout_platform, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_platformA($2, $3)
	}, $1, PLT_TYPE_B, {
		spritelayout_platformB($2, $3)
	}, $1, PLT_TYPE_C, {
		spritelayout_platformA($2, $3) spritelayout_platformB($2, $3)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_platformA($2, $4) spritelayout_platformB($3, $4)
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack($2, $3)
	})
})

define(spritelayout_passenger, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_passengerA(get_platform_height($2))
	}, $1, PLT_TYPE_B, {
		spritelayout_passengerB(get_platform_height($2))
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_passengerA(get_platform_height($2)) spritelayout_passengerB(get_platform_height($3))
	}, {
		spritelayout_passengerA(get_platform_height($2)) spritelayout_passengerB(get_platform_height($2))
	})
})

define(platform_base, {
	spritelayout_platform($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3, $4}, {$2, $3}))
	spritelayout_passenger($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
})

define(LAYOUT_TEMPLATE_PLATFORM_SINGLE, {
	define({tmp_roof}, {ifelse($1, PLT_TYPE_MULTI, $4, $3)})
	xtile({
		ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
		platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), eval(tmp_roof != ROOF_TYPE_NONE))
		spritelayout_roof(tmp_roof, $1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
	})
	xtile({
		ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
		platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), eval(tmp_roof != ROOF_TYPE_NONE))
		spritelayout_roof(tmp_roof, $1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
	})
	ifelse(tmp_roof, ROOF_TYPE_NONE, {
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
			platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), SHADOW_TRUE)
		})
	})
})

define(LAYOUT_TEMPLATE_MULTI, {
	define({tmp_roof}, {ifelse(eval($#>3), 1, $4, ROOF_TYPE_NONE)})
	$1($2, $3, tmp_roof)
	ifelse($2, PLT_TYPE_A, {
		$1(PLT_TYPE_MULTI, $3, PLT_TYPE_HIGH, tmp_roof)
		$1(PLT_TYPE_MULTI, $3, PLT_TYPE_LOW, tmp_roof)
		$1(PLT_TYPE_MULTI, $3, PLT_TYPE_LOW_ASPHALT, tmp_roof)
	}, $2, PLT_TYPE_B, {
		$1(PLT_TYPE_MULTI, PLT_TYPE_HIGH, $3, tmp_roof)
		$1(PLT_TYPE_MULTI, PLT_TYPE_LOW, $3, tmp_roof)
		$1(PLT_TYPE_MULTI, PLT_TYPE_LOW_ASPHALT, $3, tmp_roof)
	})
})

define(LAYOUT_TEMPLATE_PLATFORM, {LAYOUT_TEMPLATE_MULTI({LAYOUT_TEMPLATE_PLATFORM_SINGLE}, $@)})

define(LAYOUT_VOID, {
	xtile({
		spritelayout_ground()
	})
	xtile({
		spritelayout_ground_snow()
	})
})

define(LAYOUT_HP_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_HP_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_HP_C, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_HIGH)})
define(LAYOUT_HP_NONTRACK, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH)})

define(LAYOUT_HP_A_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_B_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_C_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_NONTRACK_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH, ROOF_TYPE_A)})

define(LAYOUT_HP_A_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_B_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_C_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_NONTRACK_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH, ROOF_TYPE_B)})

define(LAYOUT_LP_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_LP_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_LP_C, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_LOW)})
define(LAYOUT_LP_NONTRACK, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_LOW)})

define(LAYOUT_LP_A_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_B_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_C_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_NONTRACK_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_LOW, ROOF_TYPE_A)})

define(LAYOUT_LP_A_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_B_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_C_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_NONTRACK_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_LOW, ROOF_TYPE_B)})

define(LAYOUT_LAP_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_C, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_NONTRACK, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_LAP_A_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_B_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_C_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_NONTRACK_RF_A, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})

define(LAYOUT_LAP_A_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_B_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_C_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_NONTRACK_RF_B, {LAYOUT_TEMPLATE_PLATFORM(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})


define(spritelayout_buffer, {
	ifelse($2, 0, {
		ifelse($1, 0, {
			regular(spr_buffer, xyz(6, 6, 0), dxdydz(4, 4, 8))
		}, $1, 1, {
			regular(spr_buffer+2, xyz(6, 6, 0), dxdydz(4, 4, 8))
		})
	}, $2, 1, {
		ifelse($1, 0, {
			regular(spr_buffer, xyz(0, 6, 0), dxdydz(4, 4, 8))
		}, $1, 1, {
			regular(spr_buffer+2, xyz(12, 6, 0), dxdydz(4, 4, 8))
		})
	})
})

define(spritelayout_platform_bufferA, {
	define({tmp_reg}, {ifelse($3, 1, REGISTER_BUFFER_SHADOW_OFFSET, REGISTER_BUFFER_OFFSET)})
	ifelse($4, 0, {
		ifelse($1, PLT_TYPE_A, {
			notransparency(get_platform_buffer_sprite($2), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
			notransparency(get_platform_buffer_end_sprite($2), xyz(0, 6, 0), dxdydz(6, 10, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUFFER_END_OFFSET}))
			spritelayout_buffer($4, 0)
		}, $1, PLT_TYPE_B, {
			notransparency(get_platform_buffer_end_sprite($2), xyz(0, 0, 0), dxdydz(6, 10, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUFFER_END_OFFSET}))
			spritelayout_buffer($4, 0)
			notransparency(get_platform_buffer_sprite($2)+4, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
		}, $1, PLT_TYPE_C, {
			notransparency(get_platform_buffer_sprite($2), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
			notransparency(get_platform_buffer_end_sprite($2), xyz(0, 6, 0), dxdydz(6, 4, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUFFER_END_OFFSET}))
			spritelayout_buffer($4, 0)
			notransparency(get_platform_buffer_sprite($2)+4, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
		}, {})
	}, $4, 1, {
		ifelse($1, PLT_TYPE_A, {
			notransparency(get_platform_buffer_sprite($2)+2, xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
			notransparency(get_platform_buffer_end_sprite($2)+2, xyz(10, 6, 0), dxdydz(6, 10, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUFFER_END_OFFSET}))
			spritelayout_buffer($4, 0)
		}, $1, PLT_TYPE_B, {
			notransparency(get_platform_buffer_end_sprite($2)+2, xyz(10, 0, 0), dxdydz(6, 10, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUFFER_END_OFFSET}))
			spritelayout_buffer($4, 0)
			notransparency(get_platform_buffer_sprite($2)+6, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
		}, $1, PLT_TYPE_C, {
			notransparency(get_platform_buffer_sprite($2)+2, xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
			notransparency(get_platform_buffer_end_sprite($2)+2, xyz(10, 6, 0), dxdydz(6, 4, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({REGISTER_BUFFER_END_OFFSET}))
			spritelayout_buffer($4, 0)
			notransparency(get_platform_buffer_sprite($2)+6, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($2)), aslflags({OFFSET_SPRITE}), registers({tmp_reg}))
		}, {})
	})
	spritelayout_passenger($1, $2)
})

define(LAYOUT_TEMPLATE_BUFFER, {
	ifelse($1, PLT_TYPE_NONE, {
		xtile({
			spritelayout_ground()
			spritelayout_buffer(0, 1)
		})
		xtile({
			spritelayout_ground()
			spritelayout_buffer(1, 1)
		})
		xtile({
			spritelayout_ground_snow()
			spritelayout_buffer(0, 1)
		})
		xtile({
			spritelayout_ground_snow()
			spritelayout_buffer(1, 1)
		})
	}, {
		define({tmp_roof}, {ifelse(eval($#>2), 1, $3, ROOF_TYPE_NONE)})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
			spritelayout_platform_bufferA($1, $2, eval(tmp_roof != ROOF_TYPE_NONE), 0)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
			spritelayout_platform_bufferA($1, $2, eval(tmp_roof != ROOF_TYPE_NONE), 1)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
			platform_base($1, $2, eval(tmp_roof != ROOF_TYPE_NONE))
			spritelayout_buffer(0, 1)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
			platform_base($1, $2, eval(tmp_roof != ROOF_TYPE_NONE))
			spritelayout_buffer(1, 1)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
			spritelayout_platform_bufferA($1, $2, eval(tmp_roof != ROOF_TYPE_NONE), 0)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
			spritelayout_platform_bufferA($1, $2, eval(tmp_roof != ROOF_TYPE_NONE), 1)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
			platform_base($1, $2, eval(tmp_roof != ROOF_TYPE_NONE))
			spritelayout_buffer(0, 1)
			spritelayout_roof(tmp_roof, $1, $2)
		})
		xtile({
			ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
			platform_base($1, $2, eval(tmp_roof != ROOF_TYPE_NONE))
			spritelayout_buffer(1, 1)
			spritelayout_roof(tmp_roof, $1, $2)
		})
	})
})

define(LAYOUT_BUFFER_HP_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_BUFFER_HP_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_BUFFER_HP_C, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_HIGH)})

define(LAYOUT_BUFFER_HP_A_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_BUFFER_HP_B_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_BUFFER_HP_C_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A)})

define(LAYOUT_BUFFER_HP_A_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_BUFFER_HP_B_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_BUFFER_HP_C_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B)})

define(LAYOUT_BUFFER_LP_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_BUFFER_LP_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_BUFFER_LP_C, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_LOW)})

define(LAYOUT_BUFFER_LP_A_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_BUFFER_LP_B_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_BUFFER_LP_C_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A)})

define(LAYOUT_BUFFER_LP_A_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_BUFFER_LP_B_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_BUFFER_LP_C_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B)})

define(LAYOUT_BUFFER_LAP_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_BUFFER_LAP_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_BUFFER_LAP_C, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_BUFFER_LAP_A_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_BUFFER_LAP_B_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_BUFFER_LAP_C_RF_A, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})

define(LAYOUT_BUFFER_LAP_A_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_BUFFER_LAP_B_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_BUFFER_LAP_C_RF_B, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})

define(LAYOUT_BUFFER_TRACK, {LAYOUT_TEMPLATE_BUFFER(PLT_TYPE_NONE, PLT_TYPE_NONE, ROOF_TYPE_B)})