define(get_platform_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform, $1, PLT_TYPE_LOW, spr_platform_l, spr_platform_la)})
define(get_platform_nontrack_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_nontrack, $1, PLT_TYPE_LOW, spr_platform_l_nontrack, spr_platform_la_nontrack)})
define(get_platform_height, {ifelse($1, PLT_TYPE_HIGH, 3, 1)})

define(spritelayout_platformA, {regular(get_platform_sprite($1), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platformB, {regular(get_platform_sprite($1)+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platform_nontrack, {regular(get_platform_nontrack_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_platform_height($1)), aslflags({OFFSET_SPRITE}), registers({ifelse($2, SHADOW_FALSE, REGISTER_PLATFORM_OFFSET, REGISTER_PLATFORM_SHADOW_OFFSET)}))})
define(spritelayout_platform, {ifelse($1, PLT_TYPE_A, {spritelayout_platformA($2, $3)}, $1, PLT_TYPE_B, {spritelayout_platformB($2, $3)}, $1, PLT_TYPE_C, {spritelayout_platformA($2, $3) spritelayout_platformB($2, $3)}, $1, PLT_TYPE_NONTRACK, {spritelayout_platform_nontrack($2, $3)}, {})})

define(spritelayout_passengerA, {regular(spr_passengers, xyz(0, 0, $1), dxdydz(16, 6, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_PASSENGER_SKIP, REGISTER_PASSENGER_OFFSET}))})
define(spritelayout_passengerB, {regular(spr_passengers+2, xyz(0, 10, $1), dxdydz(16, 6, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_PASSENGER_SKIP, REGISTER_PASSENGER_OFFSET}))})
define(spritelayout_passenger, {ifelse($1, PLT_TYPE_A, {spritelayout_passengerA($2)}, $1, PLT_TYPE_B, {spritelayout_passengerB($2)}, {spritelayout_passengerA($2) spritelayout_passengerB($2)})})

define(platform_base, {
	spritelayout_platform($1, $2, $3)
	spritelayout_passenger($1, get_platform_height($2))
})

define(LAYOUT_PLATFORM_BASE, {
	define({tmp_roof}, {ifelse(eval($#>2), 1, $3, ROOF_TYPE_NONE)})
	xtile({
		ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground()})
		platform_base($1, $2, eval(tmp_roof != ROOF_TYPE_NONE))
		spritelayout_roof(tmp_roof, $1, $2)
	})
	xtile({
		ifelse($1, PLT_TYPE_NONTRACK, {spritelayout_ground_nontrack()}, {spritelayout_ground_snow()})
		platform_base($1, $2, eval(tmp_roof != ROOF_TYPE_NONE))
		spritelayout_roof(tmp_roof, $1, $2)
	})
})

define(LAYOUT_HP_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_HIGH)})
define(LAYOUT_HP_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_HIGH)})
define(LAYOUT_HP_C, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_HIGH)})
define(LAYOUT_HP_NONTRACK, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH)})

define(LAYOUT_HP_A_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_B_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_C_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A)})
define(LAYOUT_HP_NONTRACK_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH, ROOF_TYPE_A)})

define(LAYOUT_HP_A_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_B_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_C_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B)})
define(LAYOUT_HP_NONTRACK_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_HIGH, ROOF_TYPE_B)})

define(LAYOUT_LP_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW)})
define(LAYOUT_LP_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW)})
define(LAYOUT_LP_C, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW)})
define(LAYOUT_LP_NONTRACK, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW)})

define(LAYOUT_LP_A_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_B_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_C_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A)})
define(LAYOUT_LP_NONTRACK_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW, ROOF_TYPE_A)})

define(LAYOUT_LP_A_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_B_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_C_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B)})
define(LAYOUT_LP_NONTRACK_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW, ROOF_TYPE_B)})

define(LAYOUT_LAP_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_C, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT)})
define(LAYOUT_LAP_NONTRACK, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT)})

define(LAYOUT_LAP_A_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_B_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_C_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})
define(LAYOUT_LAP_NONTRACK_RF_A, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A)})

define(LAYOUT_LAP_A_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_B_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_C_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})
define(LAYOUT_LAP_NONTRACK_RF_B, {LAYOUT_PLATFORM_BASE(PLT_TYPE_NONTRACK, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B)})