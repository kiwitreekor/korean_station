// overpasses

include(src/includes/constants.m4)
include(src/includes/functions.m4)

import(m4_sprite)

asl_on()

include(src/stations/switches.m4)
include(src/stations/layouts/layouts.m4)
include(src/stations/layouts/roofs.m4)
include(src/stations/layouts/platforms.m4)
include(src/stations/layouts/overpasses.m4)

setfeature(_STATION)

deflabel(LABEL_HIGHPLATFORM_MODE)

forloop(X, {
definestation(X, "",
	class(CLASS_PLATFORMS)
	callbacks({CB_LAYOUT})
	include_lengths({1,2,3})
	setcargotriggers({PASS})
)}, OVERPASS_START .. OVERPASS_END)

definestation(OVERPASS_TRACK, {"", ""},
	class(CLASS_PLATFORMS, CLASS_WAYPOINT)
	callbacks({CB_LAYOUT}, {CB_LAYOUT})
	include_lengths(1, 1)
)

// layouts
define(LAYOUT_TEMPLATE_OVERPASS_SINGLE, {
	define({tmp_roof}, {ifelse($1, PLT_TYPE_MULTI, $4, $3)})
	define({tmp_ground}, {ifelse($1, PLT_TYPE_MULTI, $5, $4)})
	xtile({
		tmp_ground
		ifelse($1, PLT_TYPE_NONE, {}, {platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), SHADOW_TRUE)})
		ifelse($1, PLT_TYPE_NONE, {}, {spritelayout_fence($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))})
		spritelayout_overpass($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), spritelayout_roof(tmp_roof, $1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), ROOF_TYPE_OVERPASS))
	})
	ifelse($1, PLT_TYPE_NONE, {}, {
		forloop(X, {
			xtile({
				tmp_ground
				platform_base($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), eval(tmp_roof != ROOF_TYPE_NONE))
				spritelayout_fence($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
				spritelayout_overpass_guide($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}), X, eval(tmp_roof != ROOF_TYPE_NONE))
				spritelayout_roof(tmp_roof, $1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
			})
		}, OVERPASS_GUIDE_FRONT .. OVERPASS_GUIDE_BACK)
	})
})

define(LAYOUT_TEMPLATE_OVERPASS_SNOW, {
	LAYOUT_TEMPLATE_OVERPASS_SINGLE($@, {spritelayout_ground()})
	LAYOUT_TEMPLATE_OVERPASS_SINGLE($@, {spritelayout_ground_snow()})
})

define(LAYOUT_TEMPLATE_OVERPASS, {LAYOUT_TEMPLATE_MULTI({LAYOUT_TEMPLATE_OVERPASS_SNOW}, $@)})

layout(OVERPASS_HP_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_HIGH))
layout(OVERPASS_HP_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_HIGH))
layout(OVERPASS_HP_C, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_HIGH))

layout(OVERPASS_HP_A_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_A))
layout(OVERPASS_HP_B_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_A))
layout(OVERPASS_HP_C_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_A))

layout(OVERPASS_HP_A_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_HIGH, ROOF_TYPE_B))
layout(OVERPASS_HP_B_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_HIGH, ROOF_TYPE_B))
layout(OVERPASS_HP_C_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_HIGH, ROOF_TYPE_B))

layout(OVERPASS_LP_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW))
layout(OVERPASS_LP_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW))
layout(OVERPASS_LP_C, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW))

layout(OVERPASS_LP_A_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_A))
layout(OVERPASS_LP_B_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_A))
layout(OVERPASS_LP_C_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_A))

layout(OVERPASS_LP_A_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW, ROOF_TYPE_B))
layout(OVERPASS_LP_B_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW, ROOF_TYPE_B))
layout(OVERPASS_LP_C_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW, ROOF_TYPE_B))

layout(OVERPASS_LAP_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT))
layout(OVERPASS_LAP_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT))
layout(OVERPASS_LAP_C, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT))

layout(OVERPASS_LAP_A_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A))
layout(OVERPASS_LAP_B_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A))
layout(OVERPASS_LAP_C_RF_A, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_A))

layout(OVERPASS_LAP_A_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B))
layout(OVERPASS_LAP_B_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B))
layout(OVERPASS_LAP_C_RF_B, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT, ROOF_TYPE_B))

layout(OVERPASS_TRACK, LAYOUT_TEMPLATE_OVERPASS(PLT_TYPE_NONE, PLT_TYPE_NONE))

copylayout(OVERPASS_TRACK, OVERPASS_TRACK_WAYP)

// switches
def(40, sw_overpass_platform_cb_purchase) callback(
	cbr(0) if(CB_LAYOUT)
	ref(sw_set_registers_purchase) else
)

def(41, sw_overpass_platform_cb) callback(
	ref(sw_overpass_platform_multi_layout) if(CB_LAYOUT)
	ref(sw_set_registers) else
)

def(42, sw_overpass_track_snow) calculate({subroutine(sw_terrain_snow) * 2},
	cbfail() else
)

def(43, sw_overpass_track_cb) callback(
	ref(sw_overpass_track_snow) if(CB_LAYOUT)
	ref(sw_set_registers) else
)

forloop(X, {makestation(X, link(ref(sw_overpass_platform_cb_purchase), MENU) default(ref(sw_overpass_platform_cb)))}, OVERPASS_HP_A .. OVERPASS_HP_C_RF_B)

skipif(reflabel(LABEL_HIGHPLATFORM_MODE), getowngrfparameter(PARAM_MODE), ==, PARAM_MODE_HIGHPLATFORM)
	forloop(X, {makestation(X, link(ref(sw_overpass_platform_cb_purchase), MENU) default(ref(sw_overpass_platform_cb)))}, OVERPASS_LP_A .. OVERPASS_LAP_C_RF_B)
placelabel(LABEL_HIGHPLATFORM_MODE)

forloop(X, {makestation(X, default(ref(sw_overpass_track_cb)))}, OVERPASS_TRACK .. OVERPASS_TRACK_WAYP)
