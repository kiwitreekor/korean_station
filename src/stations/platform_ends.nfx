// platforms

include(src/includes/constants.m4)
include(src/includes/functions.m4)

import(m4_sprite)

asl_on()

include(src/stations/switches.m4)
include(src/stations/layouts/layouts.m4)
include(src/stations/layouts/roofs.m4)
include(src/stations/layouts/platforms.m4)
include(src/stations/layouts/platforms_extra.m4)

setfeature(_STATION)

deflabel(LABEL_HIGHPLATFORM_MODE)

forloop(X, {
definestation(X, "",
	class(CLASS_PLATFORMS)
	callbacks({CB_LAYOUT})
	setcargotriggers({PASS})
)}, PLATFORM_STARTEND_START .. PLATFORM_STARTEND_END)

// non-track tiles
forloop(X, {
definestation(X, "",
	class(CLASS_NONTRACK)
	callbacks({CB_LAYOUT})
	setcargotriggers({PASS})
	nontrack(TTD_ALLTILES)
	nowires(TTD_ALLTILES)
)}, NONTRACK_STARTEND_START .. NONTRACK_STARTEND_END)

// layouts
define(get_platform_start_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_start, $1, PLT_TYPE_LOW, spr_platform_l_start, spr_platform_la_start)})
define(get_platform_end_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_end, $1, PLT_TYPE_LOW, spr_platform_l_end, spr_platform_la_end)})
define(get_platform_startend_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_startend, $1, PLT_TYPE_LOW, spr_platform_l_startend, spr_platform_la_startend)})

define(get_platform_nontrack_start_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_nontrack_start, $1, PLT_TYPE_LOW, spr_platform_l_nontrack_start, spr_platform_la_nontrack_start)})
define(get_platform_nontrack_end_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_nontrack_end, $1, PLT_TYPE_LOW, spr_platform_l_nontrack_end, spr_platform_la_nontrack_end)})
define(get_platform_nontrack_startend_sprite, {ifelse($1, PLT_TYPE_HIGH, spr_platform_nontrack_startend, $1, PLT_TYPE_LOW, spr_platform_l_nontrack_startend, spr_platform_la_nontrack_startend)})

define(spritelayout_platform_fenceA_front, {
	regular(spr_platform_end_fence, xyz(8, 0, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_A_FENCE_SKIP}))
	regular(spr_platform_end_fence+2, xyz(8, 0, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_fenceA_back, {
	regular(spr_platform_end_fence, xyz(0, 0, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_A_FENCE_SKIP}))
	regular(spr_platform_end_fence+2, xyz(8, 0, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_fenceB_front, {
	regular(spr_platform_end_fence, xyz(8, 16, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_B_FENCE_SKIP}))
	regular(spr_platform_end_fence+2, xyz(8, 10, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_fenceB_back, {
	regular(spr_platform_end_fence, xyz(0, 16, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_B_FENCE_SKIP}))
	regular(spr_platform_end_fence+2, xyz(8, 10, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_nontrack_fence_front, {
	regular(spr_platform_end_fence, xyz(8, 0, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_A_FENCE_SKIP}))
	regular(spr_platform_end_fence, xyz(8, 16, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_B_FENCE_SKIP}))
	regular(spr_platform_end_fence+4, xyz(8, 0, get_platform_height($1)), dxdydz(0, 16, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_nontrack_fence_back, {
	regular(spr_platform_end_fence, xyz(0, 0, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_A_FENCE_SKIP}))
	regular(spr_platform_end_fence, xyz(0, 16, get_platform_height($1)), dxdydz(8, 1, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_B_FENCE_SKIP}))
	regular(spr_platform_end_fence+4, xyz(8, 0, get_platform_height($1)), dxdydz(0, 16, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})

define(spritelayout_platform_fenceA_single, {
	regular(spr_platform_end_fence+2, xyz(0, 0, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
	regular(spr_platform_end_fence+2, xyz(16, 0, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_fenceB_single, {
	regular(spr_platform_end_fence+2, xyz(0, 10, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
	regular(spr_platform_end_fence+2, xyz(16, 10, get_platform_height($1)), dxdydz(0, 6, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})
define(spritelayout_platform_nontrack_fence_single, {
	regular(spr_platform_end_fence+4, xyz(0, 0, get_platform_height($1)), dxdydz(0, 16, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
	regular(spr_platform_end_fence+4, xyz(16, 0, get_platform_height($1)), dxdydz(0, 16, 6), aslflags({SKIP}), registers({REGISTER_PLATFORM_END_FENCE_SKIP}))
})

define(spritelayout_track_fenceA_front, {compcol(spr_track_fence_front, xyz(0, 1, 0), dxdydz(16, 1, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_TRACK_A_FENCE_SKIP, REGISTER_TRACK_CUSTOM_FENCE_OFFSET}))})
define(spritelayout_track_fenceA_back, {compcol(spr_track_fence_back, xyz(0, 1, 0), dxdydz(8, 1, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_TRACK_A_FENCE_SKIP, REGISTER_TRACK_CUSTOM_FENCE_OFFSET}))})
define(spritelayout_track_fenceB_front, {compcol(spr_track_fence_front+2, xyz(0, 15, 0), dxdydz(16, 1, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_TRACK_B_FENCE_SKIP, REGISTER_TRACK_CUSTOM_FENCE_OFFSET}))})
define(spritelayout_track_fenceB_back, {compcol(spr_track_fence_back+2, xyz(0, 15, 0), dxdydz(8, 1, 6), aslflags({SKIP, OFFSET_SPRITE}), registers({REGISTER_TRACK_B_FENCE_SKIP, REGISTER_TRACK_CUSTOM_FENCE_OFFSET}))})

define(spritelayout_platformA_start, {notransparency(get_platform_start_sprite($1), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)))})
define(spritelayout_platformA_end, {notransparency(get_platform_end_sprite($1), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)))})
define(spritelayout_platformA_startend, {notransparency(get_platform_startend_sprite($1), xyz(0, 0, 0), dxdydz(16, 6, get_platform_height($1)))})
define(spritelayout_platformB_start, {notransparency(get_platform_start_sprite($1)+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)))})
define(spritelayout_platformB_end, {notransparency(get_platform_end_sprite($1)+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)))})
define(spritelayout_platformB_startend, {notransparency(get_platform_startend_sprite($1)+2, xyz(0, 10, 0), dxdydz(16, 6, get_platform_height($1)))})

define(spritelayout_platform_nontrack_start, {notransparency(get_platform_nontrack_start_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_platform_height($1)))})
define(spritelayout_platform_nontrack_end, {notransparency(get_platform_nontrack_end_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_platform_height($1)))})
define(spritelayout_platform_nontrack_startend, {notransparency(get_platform_nontrack_startend_sprite($1), xyz(0, 0, 0), dxdydz(16, 16, get_platform_height($1)))})

define(spritelayout_platform_start, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_platformA_start($2, $3)
	}, $1, PLT_TYPE_B, {
		spritelayout_platformB_start($2, $3)
	}, $1, PLT_TYPE_C, {
		spritelayout_platformA_start($2, $3) spritelayout_platformB_start($2, $3)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_platformA_start($2, $4) spritelayout_platformB_start($3, $4)
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack_start($2, $3)
	})
})

define(spritelayout_platform_end, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_platformA_end($2, $3)
	}, $1, PLT_TYPE_B, {
		spritelayout_platformB_end($2, $3)
	}, $1, PLT_TYPE_C, {
		spritelayout_platformA_end($2, $3) spritelayout_platformB_end($2, $3)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_platformA_end($2, $4) spritelayout_platformB_end($3, $4)
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack_end($2, $3)
	})
})

define(spritelayout_platform_startend, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_platformA_startend($2, $3)
	}, $1, PLT_TYPE_B, {
		spritelayout_platformB_startend($2, $3)
	}, $1, PLT_TYPE_C, {
		spritelayout_platformA_startend($2, $3) spritelayout_platformB_startend($2, $3)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_platformA_startend($2, $4) spritelayout_platformB_startend($3, $4)
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack_startend($2, $3)
	})
})

define(spritelayout_fence_front, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_platform_fenceA_front($2)
		spritelayout_track_fenceA_back()
		spritelayout_track_fenceB()
	}, $1, PLT_TYPE_B, {
		spritelayout_track_fenceA()
		spritelayout_platform_fenceB_front($2)
		spritelayout_track_fenceB_back()
	}, $1, PLT_TYPE_C, {
		spritelayout_platform_fenceA_front($2)
		spritelayout_track_fenceA_back()
		spritelayout_platform_fenceB_front($2)
		spritelayout_track_fenceB_back()
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_platform_fenceA_front($2)
		spritelayout_track_fenceA_back()
		spritelayout_platform_fenceB_front($3)
		spritelayout_track_fenceB_back()
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack_fence_front($2)
		spritelayout_track_fenceA_back()
		spritelayout_track_fenceB_back()
	}, {
		spritelayout_track_fenceA()
		spritelayout_track_fenceB()
	})
})

define(spritelayout_fence_back, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_track_fenceA_front()
		spritelayout_platform_fenceA_back($2)
		spritelayout_track_fenceB()
	}, $1, PLT_TYPE_B, {
		spritelayout_track_fenceA()
		spritelayout_track_fenceB_front()
		spritelayout_platform_fenceB_back($2)
	}, $1, PLT_TYPE_C, {
		spritelayout_track_fenceA_front()
		spritelayout_platform_fenceA_back($2)
		spritelayout_track_fenceB_front()
		spritelayout_platform_fenceB_back($2)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_track_fenceA_front()
		spritelayout_platform_fenceA_back($2)
		spritelayout_track_fenceB_front()
		spritelayout_platform_fenceB_back($3)
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack_fence_back($2)
		spritelayout_track_fenceA_front()
		spritelayout_track_fenceB_front()
	}, {
		spritelayout_track_fenceA()
		spritelayout_track_fenceB()
	})
})

define(spritelayout_fence_single, {
	ifelse($1, PLT_TYPE_A, {
		spritelayout_platform_fenceA_single($2)
	}, $1, PLT_TYPE_B, {
		spritelayout_platform_fenceB_single($2)
	}, $1, PLT_TYPE_C, {
		spritelayout_platform_fenceA_single($2)
		spritelayout_platform_fenceB_single($2)
	}, $1, PLT_TYPE_MULTI, {
		spritelayout_platform_fenceA_single($2)
		spritelayout_platform_fenceB_single($3)
	}, $1, PLT_TYPE_NONTRACK, {
		spritelayout_platform_nontrack_fence_single($2)
	}, {
		spritelayout_track_fenceA()
		spritelayout_track_fenceB()
	})
})

define(LAYOUT_TEMPLATE_PLATFORM_STARTEND_BASE, {
	define({tmp_ground}, {ifelse($1, PLT_TYPE_MULTI, $5, $4)})
	xtile({
		tmp_ground
		spritelayout_platform_start($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_fence_front($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_catenary($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
	})
	xtile({
		tmp_ground
		spritelayout_platform_end($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_fence_back($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_catenary($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
	})
	xtile({
		tmp_ground
		spritelayout_platform_startend($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_fence_single($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_fence($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
		spritelayout_catenary($1, ifelse($1, PLT_TYPE_MULTI, {$2, $3}, {$2}))
	})
})

define(LAYOUT_TEMPLATE_PLATFORM_STARTEND_SINGLE, {
	LAYOUT_TEMPLATE_PLATFORM_STARTEND_BASE($@, {spritelayout_ground()})
	LAYOUT_TEMPLATE_PLATFORM_STARTEND_BASE($@, {spritelayout_ground_snow()})
})

define(LAYOUT_TEMPLATE_PLATFORM_STARTEND, {LAYOUT_TEMPLATE_MULTI({LAYOUT_TEMPLATE_PLATFORM_STARTEND_SINGLE}, $@)})


define(LAYOUT_TEMPLATE_PLATFORM_NONTRACK_STARTEND, {
	xtile({
		spritelayout_ground_nontrack()
		spritelayout_platform_start(PLT_TYPE_NONTRACK, $1)
		spritelayout_fence_front(PLT_TYPE_NONTRACK, $1)
	})
	xtile({
		spritelayout_ground_nontrack()
		spritelayout_platform_end(PLT_TYPE_NONTRACK, $1)
		spritelayout_fence_back(PLT_TYPE_NONTRACK, $1)
	})
	xtile({
		spritelayout_ground_nontrack()
		spritelayout_platform_startend(PLT_TYPE_NONTRACK, $1)
		spritelayout_fence_single(PLT_TYPE_NONTRACK, $1)
		spritelayout_fence(PLT_TYPE_NONTRACK, $1)
	})
})

layout(STARTEND_HP_A, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_A, PLT_TYPE_HIGH))
layout(STARTEND_HP_B, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_B, PLT_TYPE_HIGH))
layout(STARTEND_HP_C, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_C, PLT_TYPE_HIGH))

layout(STARTEND_LP_A, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_A, PLT_TYPE_LOW))
layout(STARTEND_LP_B, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_B, PLT_TYPE_LOW))
layout(STARTEND_LP_C, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_C, PLT_TYPE_LOW))

layout(STARTEND_LAP_A, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_A, PLT_TYPE_LOW_ASPHALT))
layout(STARTEND_LAP_B, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_B, PLT_TYPE_LOW_ASPHALT))
layout(STARTEND_LAP_C, LAYOUT_TEMPLATE_PLATFORM_STARTEND(PLT_TYPE_C, PLT_TYPE_LOW_ASPHALT))

layout(STARTEND_HP_NONTRACK, LAYOUT_TEMPLATE_PLATFORM_NONTRACK_STARTEND(PLT_TYPE_HIGH))
layout(STARTEND_LP_NONTRACK, LAYOUT_TEMPLATE_PLATFORM_NONTRACK_STARTEND(PLT_TYPE_LOW))
layout(STARTEND_LAP_NONTRACK, LAYOUT_TEMPLATE_PLATFORM_NONTRACK_STARTEND(PLT_TYPE_LOW_ASPHALT))

// switches
def(41, sw_platform_startend_layout_sub2) plt_posrev(
	cbr(2) if(0)
	cbr(4) else
)

def(42, sw_platform_startend_layout_sub) plt_pos(
	cbr(0) if(0)
	ref(sw_platform_startend_layout_sub2) else
)

def(43, sw_platform_startend_layout) plt_length(
	cbr(4) if(1)
	ref(sw_platform_startend_layout_sub) else
)

def(44, sw_platformA_startend_layout) calculate({subroutine(sw_platformA_check_opposite) * 2 + subroutine(sw_terrain_snow) * 6 + subroutine(sw_platform_startend_layout)},
	cbfail() else
)

def(45, sw_platformB_startend_layout) calculate({subroutine(sw_platformB_check_opposite) * 2 + subroutine(sw_terrain_snow) * 6 + subroutine(sw_platform_startend_layout)},
	cbfail() else
)


def(46, sw_platform_startend_multi_layout) subroutine(sw_platform_multi_check,
	ref(sw_platformA_startend_layout) if(1)
	ref(sw_platformB_startend_layout) if(2)
	ref(sw_platform_startend_layout) else
)

def(50, sw_platform_startend_cb) callback(
	ref(sw_platform_startend_multi_layout) if(CB_LAYOUT)
	ref(sw_set_registers) else
)

def(51, sw_platform_startend_cb_purchase) callback(
	cbr(4) if(CB_LAYOUT)
	ref(sw_set_registers_purchase) else
)

def(52, sw_platform_nontrack_startend_cb) callback(
	ref(sw_platform_startend_layout) if(CB_LAYOUT)
	ref(sw_set_registers) else
)

forloop(X, {makestation(X, link(ref(sw_platform_startend_cb_purchase), MENU) default(ref(sw_platform_startend_cb)))}, STARTEND_HP_A .. STARTEND_HP_C)

skipif(reflabel(LABEL_HIGHPLATFORM_MODE), getowngrfparameter(PARAM_MODE), ==, PARAM_MODE_HIGHPLATFORM)
	forloop(X, {makestation(X, link(ref(sw_platform_startend_cb_purchase), MENU) default(ref(sw_platform_startend_cb)))}, STARTEND_LP_A .. STARTEND_LAP_C)
placelabel(LABEL_HIGHPLATFORM_MODE)

makestation(STARTEND_HP_NONTRACK, link(ref(sw_platform_startend_cb_purchase), MENU) default(ref(sw_platform_nontrack_startend_cb)))

skipif(reflabel(LABEL_HIGHPLATFORM_MODE), getowngrfparameter(PARAM_MODE), ==, PARAM_MODE_HIGHPLATFORM)
	forloop(X, {makestation(X, link(ref(sw_platform_startend_cb_purchase), MENU) default(ref(sw_platform_nontrack_startend_cb)))}, STARTEND_LP_NONTRACK .. STARTEND_LAP_NONTRACK)
placelabel(LABEL_HIGHPLATFORM_MODE)