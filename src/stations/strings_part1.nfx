divert(-1)
include(src/includes/constants.m4)
include(src/includes/functions.m4)

define({file_index}, 1)

setfeature(_STATION)
divert

include(lang/english.nfx)
include(lang/korean.nfx)


// bridge_height
property_mapping(STAT_BRIDGES, {bridge_height})

deflabel(LABEL_ALLOW_BRIDGE)
skipif(reflabel(LABEL_ALLOW_BRIDGE), MAPPING, !=, STAT_BRIDGES)
skipif(reflabel(LABEL_ALLOW_BRIDGE), getowngrfparameter(PARAM_FLAGS), BITCLR, PARAM_FLAGS_BRIDGE)

setproperties(HP_A .. HP_C, bridge_height(1,1,1,1,1,1,1,1))
setproperties(LP_A .. LP_A, bridge_height(1,1,1,1,1,1,1,1))
setproperties(LAP_A .. LAP_A, bridge_height(1,1,1,1,1,1,1,1))

setproperties(HP_A_RF_A .. HP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(LP_A_RF_A .. LP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(LAP_A_RF_A .. LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))

setproperties(CROSSING_LP_A .. CROSSING_LP_C, bridge_height(1,1,1,1,1,1,1,1))
setproperties(CROSSING_LAP_A .. CROSSING_LAP_C, bridge_height(1,1,1,1,1,1,1,1))

setproperties(CROSSING_LP_A_RF_A .. CROSSING_LP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(CROSSING_LAP_A_RF_A .. CROSSING_LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))

setproperties(HP_NONTRACK, bridge_height(1,1,1,1,1,1,1,1))
setproperties(LP_NONTRACK, bridge_height(1,1,1,1,1,1,1,1))
setproperties(LAP_NONTRACK, bridge_height(1,1,1,1,1,1,1,1))

setproperties(HP_NONTRACK_RF_A .. HP_NONTRACK_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(LP_NONTRACK_RF_A .. LP_NONTRACK_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(LAP_NONTRACK_RF_A .. LAP_NONTRACK_RF_B, bridge_height(3,3,3,3,3,3,3,3))

setproperties(OVERPASS_START .. OVERPASS_END, bridge_height(3,3,3,3,3,3,3,3))

setproperties(SIGN_A_HP_A .. SIGN_A_LAP_C, bridge_height(1,1,1,1,1,1,1,1))
setproperties(SIGN_B_HP_B_RF_A .. SIGN_B_LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(SIGN_C_HP_A .. SIGN_C_LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(LED_HP_A_RF_A .. LED_LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))

setproperties(WAITINGROOM_HP_A .. WAITINGROOM_HP_C, bridge_height(1,1,1,1,1,1,1,1))
setproperties(WAITINGROOM_LP_A .. WAITINGROOM_LP_C, bridge_height(1,1,1,1,1,1,1,1))
setproperties(WAITINGROOM_LAP_A .. WAITINGROOM_LAP_C, bridge_height(1,1,1,1,1,1,1,1))

setproperties(WAITINGROOM_HP_A_RF_A .. WAITINGROOM_HP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(WAITINGROOM_LP_A_RF_A .. WAITINGROOM_LP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))
setproperties(WAITINGROOM_LAP_A_RF_A .. WAITINGROOM_LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))

setproperties(LIGHT_HP_A .. LIGHT_LAP_C, bridge_height(3,3,3,3,3,3,3,3))

setproperties(UNDERPASS_HP_A_RF_A .. UNDERPASS_LAP_C_RF_B, bridge_height(3,3,3,3,3,3,3,3))

setproperties(PSD_HP_A .. PSD_HP_C, bridge_height(1,1,1,1,1,1,1,1))
setproperties(PSD_HP_A_RF_A .. PSD_HP_C_RF_B, bridge_height(1,1,1,1,1,1,1,1))

setproperties(VOID_TILE, bridge_height(1,1,1,1,1,1,1,1))

placelabel(LABEL_ALLOW_BRIDGE)